{
  "endpoints": [
    {
      "Id": 2,
      "Name": "greasy-gold",
      "Type": 1,
      "URL": "unix:///var/run/docker.sock",
      "GroupId": 1,
      "PublicURL": "",
      "Gpus": [],
      "TLSConfig": {
        "TLS": false,
        "TLSSkipVerify": false
      },
      "AzureCredentials": {
        "ApplicationID": "",
        "TenantID": "",
        "AuthenticationKey": ""
      },
      "TagIds": [],
      "Status": 1,
      "Snapshots": [],
      "UserAccessPolicies": {},
      "TeamAccessPolicies": {},
      "EdgeKey": "",
      "EdgeCheckinInterval": 0,
      "Kubernetes": {
        "Snapshots": [],
        "Configuration": {
          "UseLoadBalancer": false,
          "UseServerMetrics": false,
          "EnableResourceOverCommit": true,
          "ResourceOverCommitPercentage": 0,
          "StorageClasses": [],
          "IngressClasses": [],
          "RestrictDefaultNamespace": false,
          "IngressAvailabilityPerNamespace": false,
          "AllowNoneIngressClass": false
        },
        "Flags": {
          "IsServerMetricsDetected": false,
          "IsServerIngressClassDetected": false,
          "IsServerStorageDetected": false
        }
      },
      "ComposeSyntaxMaxVersion": "",
      "SecuritySettings": {
        "allowBindMountsForRegularUsers": true,
        "allowPrivilegedModeForRegularUsers": true,
        "allowVolumeBrowserForRegularUsers": false,
        "allowHostNamespaceForRegularUsers": true,
        "allowDeviceMappingForRegularUsers": true,
        "allowStackManagementForRegularUsers": true,
        "allowContainerCapabilitiesForRegularUsers": true,
        "allowSysctlSettingForRegularUsers": true,
        "enableHostManagementFeatures": false
      },
      "LastCheckInDate": 0,
      "QueryDate": 0,
      "Heartbeat": false,
      "PostInitMigrations": {
        "MigrateIngresses": false,
        "MigrateGPUs": false
      },
      "Edge": {
        "AsyncMode": false,
        "PingInterval": 0,
        "SnapshotInterval": 0,
        "CommandInterval": 0
      },
      "Agent": {
        "Version": ""
      },
      "AuthorizedUsers": null,
      "AuthorizedTeams": null,
      "Tags": null
    },
    {
      "Id": 3,
      "Name": "overkill-1",
      "Type": 2,
      "URL": "tcp://overkill-1:9001",
      "GroupId": 1,
      "PublicURL": "",
      "Gpus": [],
      "TLSConfig": {
        "TLS": true,
        "TLSSkipVerify": true
      },
      "AzureCredentials": {
        "ApplicationID": "",
        "TenantID": "",
        "AuthenticationKey": ""
      },
      "TagIds": [],
      "Status": 1,
      "Snapshots": [],
      "UserAccessPolicies": {},
      "TeamAccessPolicies": {},
      "EdgeKey": "",
      "EdgeCheckinInterval": 0,
      "Kubernetes": {
        "Snapshots": [],
        "Configuration": {
          "UseLoadBalancer": false,
          "UseServerMetrics": false,
          "EnableResourceOverCommit": true,
          "ResourceOverCommitPercentage": 0,
          "StorageClasses": [],
          "IngressClasses": [],
          "RestrictDefaultNamespace": false,
          "IngressAvailabilityPerNamespace": false,
          "AllowNoneIngressClass": false
        },
        "Flags": {
          "IsServerMetricsDetected": false,
          "IsServerIngressClassDetected": false,
          "IsServerStorageDetected": false
        }
      },
      "ComposeSyntaxMaxVersion": "",
      "SecuritySettings": {
        "allowBindMountsForRegularUsers": true,
        "allowPrivilegedModeForRegularUsers": true,
        "allowVolumeBrowserForRegularUsers": false,
        "allowHostNamespaceForRegularUsers": true,
        "allowDeviceMappingForRegularUsers": true,
        "allowStackManagementForRegularUsers": true,
        "allowContainerCapabilitiesForRegularUsers": true,
        "allowSysctlSettingForRegularUsers": true,
        "enableHostManagementFeatures": false
      },
      "LastCheckInDate": 0,
      "QueryDate": 0,
      "Heartbeat": false,
      "PostInitMigrations": {
        "MigrateIngresses": false,
        "MigrateGPUs": false
      },
      "Edge": {
        "AsyncMode": false,
        "PingInterval": 0,
        "SnapshotInterval": 0,
        "CommandInterval": 0
      },
      "Agent": {
        "Version": "2.21.2"
      },
      "AuthorizedUsers": null,
      "AuthorizedTeams": null,
      "Tags": null
    }
  ],
  "endpoint_groups": [
    {
      "Id": 1,
      "Name": "Unassigned",
      "Description": "Unassigned environments",
      "UserAccessPolicies": {},
      "TeamAccessPolicies": {},
      "TagIds": [],
      "Labels": [],
      "AuthorizedUsers": null,
      "AuthorizedTeams": null
    }
  ],
  "endpoint_relations": [
    {
      "EndpointID": 2,
      "EdgeStacks": {}
    },
    {
      "EndpointID": 3,
      "EdgeStacks": {}
    }
  ],
  "resource_control": [
    {
      "Id": 1,
      "ResourceId": "watchyourlan-data_efc20542-fa3a-4c70-a3c8-419a65d71550",
      "SubResourceIds": [],
      "Type": 3,
      "UserAccesses": [],
      "TeamAccesses": [],
      "Public": false,
      "AdministratorsOnly": true,
      "System": false
    },
    {
      "Id": 2,
      "ResourceId": "2_watchyourlan",
      "SubResourceIds": [],
      "Type": 6,
      "UserAccesses": [],
      "TeamAccesses": [],
      "Public": false,
      "AdministratorsOnly": true,
      "System": false
    },
    {
      "Id": 3,
      "ResourceId": "3_tubesync",
      "SubResourceIds": [],
      "Type": 6,
      "UserAccesses": [],
      "TeamAccesses": [],
      "Public": false,
      "AdministratorsOnly": true,
      "System": false
    },
    {
      "Id": 4,
      "ResourceId": "2_mealie",
      "SubResourceIds": [],
      "Type": 6,
      "UserAccesses": [],
      "TeamAccesses": [],
      "Public": false,
      "AdministratorsOnly": true,
      "System": false
    }
  ],
  "settings": {
    "LogoURL": "",
    "BlackListedLabels": [],
    "AuthenticationMethod": 1,
    "InternalAuthSettings": {
      "RequiredPasswordLength": 12
    },
    "LDAPSettings": {
      "AnonymousMode": true,
      "ReaderDN": "",
      "URL": "",
      "TLSConfig": {
        "TLS": false,
        "TLSSkipVerify": false
      },
      "StartTLS": false,
      "SearchSettings": [
        {
          "BaseDN": "",
          "Filter": "",
          "UserNameAttribute": ""
        }
      ],
      "GroupSearchSettings": [
        {
          "GroupBaseDN": "",
          "GroupFilter": "",
          "GroupAttribute": ""
        }
      ],
      "AutoCreateUsers": true
    },
    "OAuthSettings": {
      "ClientID": "",
      "AccessTokenURI": "",
      "AuthorizationURI": "",
      "ResourceURI": "",
      "RedirectURI": "",
      "UserIdentifier": "",
      "Scopes": "",
      "OAuthAutoCreateUsers": false,
      "DefaultTeamID": 0,
      "SSO": true,
      "LogoutURI": "",
      "KubeSecretKey": "Qpb0zb+lSm9pnrOjjk2QEbbbUqTVQvd8WDVpFphupaM=",
      "AuthStyle": 0
    },
    "openAMTConfiguration": {
      "enabled": false,
      "mpsServer": "",
      "mpsUser": "",
      "mpsPassword": "",
      "mpsToken": "",
      "certFileName": "",
      "certFileContent": "",
      "certFilePassword": "",
      "domainName": ""
    },
    "fdoConfiguration": {
      "enabled": false,
      "ownerURL": "",
      "ownerUsername": "",
      "ownerPassword": ""
    },
    "FeatureFlagSettings": null,
    "SnapshotInterval": "5m",
    "TemplatesURL": "",
    "GlobalDeploymentOptions": {
      "hideStacksFunctionality": false
    },
    "EdgeAgentCheckinInterval": 5,
    "ShowKomposeBuildOption": false,
    "EnableEdgeComputeFeatures": false,
    "UserSessionTimeout": "8h",
    "KubeconfigExpiry": "0",
    "EnableTelemetry": true,
    "HelmRepositoryURL": "https://charts.bitnami.com/bitnami",
    "KubectlShellImage": "portainer/kubectl-shell",
    "TrustOnFirstConnect": false,
    "EnforceEdgeID": false,
    "AgentSecret": "",
    "EdgePortainerUrl": "",
    "Edge": {
      "CommandInterval": 0,
      "PingInterval": 0,
      "SnapshotInterval": 0,
      "AsyncMode": false
    }
  },
  "snapshots": [
    {
      "EndpointId": 2,
      "Docker": {
        "Time": 1757127249,
        "DockerVersion": "28.3.3",
        "Swarm": false,
        "TotalCPU": 12,
        "TotalMemory": 25136574464,
        "ContainerCount": 13,
        "RunningContainerCount": 13,
        "StoppedContainerCount": 0,
        "HealthyContainerCount": 0,
        "UnhealthyContainerCount": 0,
        "VolumeCount": 11,
        "ImageCount": 21,
        "ServiceCount": 0,
        "StackCount": 12,
        "DockerSnapshotRaw": {
          "Containers": [
            {
              "Id": "82c7a3e9371acbd3600425ed9b455f9737204e9242bf92cdf6cf5b245943f70d",
              "Names": [
                "/plex"
              ],
              "Image": "lscr.io/linuxserver/plex:latest",
              "ImageID": "sha256:b23d34fad1e339ea2f7a39938c3aba56258b7146e097e68f9633ef9621c06752",
              "Command": "/init",
              "Created": 1753481859,
              "Ports": [],
              "Labels": {
                "build_version": "Linuxserver.io version:- 1.41.9.9961-46083195d-ls274 Build-date:- 2025-07-21T09:36:12+00:00",
                "com.docker.compose.config-hash": "7b902d0e807c4eafb4694d22ababcc493b5cf9e54b4bdce5b089a3db031ee134",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "plex",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/plex",
                "com.docker.compose.service": "plex",
                "com.docker.compose.version": "1.29.2",
                "maintainer": "thelamer",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-07-21T09:36:12+00:00",
                "org.opencontainers.image.description": "[Plex](https://plex.tv) organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. Straightforward design and bulk actions mean getting things done faster.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-plex",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "54bac1c3cf15128ecf7832fda93eb5378ac804a1",
                "org.opencontainers.image.revision": "54bac1c3cf15128ecf7832fda93eb5378ac804a1",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-plex",
                "org.opencontainers.image.title": "Plex",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-plex/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "1.41.9.9961-46083195d-ls274"
              },
              "State": "running",
              "Status": "Up 4 days",
              "HostConfig": {
                "NetworkMode": "host"
              },
              "NetworkSettings": {
                "Networks": {
                  "host": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "f3130d9e41d307eb167d2d68fc2f202d3293c04cd78c91a9a869d8bfba77977c",
                    "EndpointID": "185634c1526e9534af61fb9b7ce893fa0be2b5dea8a509db485516c686e9207e",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/docker/plex/plex-config",
                  "Destination": "/config",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/forest2/Media/Movies",
                  "Destination": "/movies",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/forest2/Media/TV",
                  "Destination": "/tv",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "1aa43236ee32dc3fa4218453a1604e0714d3a7f47840bc88c38635268eaf6313",
              "Names": [
                "/minecraft_mc_1"
              ],
              "Image": "itzg/minecraft-server",
              "ImageID": "sha256:88981ea874cfe2d829da99fa9e42ce6478047cc56e5d1824072eb7f99f2ca511",
              "Command": "/start",
              "Created": 1750204485,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 25565,
                  "PublicPort": 25565,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 25565,
                  "PublicPort": 25565,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "88879cf9ff79dacb21cc9b1bfc8e9ea00c7e35dab07798d9d795973e143ac70d",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "minecraft",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/minecraft",
                "com.docker.compose.service": "mc",
                "com.docker.compose.version": "1.29.2",
                "org.opencontainers.image.authors": "Geoff Bourne \u003citzgeoff@gmail.com\u003e",
                "org.opencontainers.image.created": "2024-06-18T20:14:17.686Z",
                "org.opencontainers.image.description": "Docker image that provides a Minecraft Server that will automatically download selected version at startup",
                "org.opencontainers.image.licenses": "Apache-2.0",
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.revision": "3349df764e50048afac5b3bcde9f01040e2b8e1e",
                "org.opencontainers.image.source": "https://github.com/itzg/docker-minecraft-server",
                "org.opencontainers.image.title": "docker-minecraft-server",
                "org.opencontainers.image.url": "https://github.com/itzg/docker-minecraft-server",
                "org.opencontainers.image.version": "java21"
              },
              "State": "running",
              "Status": "Up 4 days (healthy)",
              "HostConfig": {
                "NetworkMode": "minecraft_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "minecraft_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "9e:59:31:2a:22:61",
                    "NetworkID": "d31f776cd826172e6aad261ffa88f614cb18a2e3d016f3b2a707f61fdfea7d7b",
                    "EndpointID": "5880d9b13c05e76dee3009723e3c810fedb07fce046e4295b5f659380b575db8",
                    "Gateway": "172.26.0.1",
                    "IPAddress": "172.26.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/docker/minecraft/data",
                  "Destination": "/data",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "61e04e4ee82e99b22d403944bf97b2f759ffa985426f81374ce567112e89ccf8",
              "Names": [
                "/ddns-updater"
              ],
              "Image": "qmcgaw/ddns-updater",
              "ImageID": "sha256:c2ef7ac2d40dd8818a38bf601b4cb54a1b21bc00dabe9e1aa4a239fcc59c3c7e",
              "Command": "/updater/app",
              "Created": 1747879087,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 8000,
                  "PublicPort": 8000,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 8000,
                  "PublicPort": 8000,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "39898953195975c1a47613d97dd60ddbe32c53398ede94925138e64684598810",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "ddns",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/ddns",
                "com.docker.compose.service": "ddns-updater",
                "com.docker.compose.version": "1.29.2",
                "org.opencontainers.image.authors": "quentin.mcgaw@gmail.com",
                "org.opencontainers.image.created": "2024-05-06T11:16:06.246Z",
                "org.opencontainers.image.description": "Container to update DNS records periodically with WebUI for many DNS providers",
                "org.opencontainers.image.documentation": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.licenses": "MIT",
                "org.opencontainers.image.revision": "542e89536c524cdb2215a48384af7ef6fad2c443",
                "org.opencontainers.image.source": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.title": "ddns-updater",
                "org.opencontainers.image.url": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.version": "latest"
              },
              "State": "running",
              "Status": "Up 4 days (healthy)",
              "HostConfig": {
                "NetworkMode": "bridge"
              },
              "NetworkSettings": {
                "Networks": {
                  "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "02:c7:97:b0:43:10",
                    "NetworkID": "891cf21451d063cd4d10f5f0865a9c1c82649b0ce879e1ba39c21c1d17c7574d",
                    "EndpointID": "f14b33f7e94b160c09c2d7ab1fad935ac8109c4b03f10039ed68ff46693cfffc",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/docker/ddns/data",
                  "Destination": "/updater/data",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "3fe08d122adde192583ae1941ae4fe81c136b9a223bece0670418e980d06ba7f",
              "Names": [
                "/swag"
              ],
              "Image": "lscr.io/linuxserver/swag:latest",
              "ImageID": "sha256:660a81ea64c53991fc358a8cd5b2d3d232de86611064366dfc95f4ddf45885f2",
              "Command": "/init",
              "Created": 1738785757,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 443,
                  "PublicPort": 443,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 443,
                  "PublicPort": 443,
                  "Type": "tcp"
                },
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 80,
                  "PublicPort": 80,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 80,
                  "PublicPort": 80,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "build_version": "Linuxserver.io version:- 3.1.0-ls361 Build-date:- 2025-02-01T03:33:29+00:00",
                "com.docker.compose.config-hash": "172e3d4113457c34c501f7aa34c53f34c583f397cfaa2680c624ac6b59057e77",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "swag",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/swag",
                "com.docker.compose.service": "swag",
                "com.docker.compose.version": "1.29.2",
                "maintainer": "nemchik",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-02-01T03:33:29+00:00",
                "org.opencontainers.image.description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-swag",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "c1d1a87a0c5542864069d4d6b7491d60a53d55f5",
                "org.opencontainers.image.revision": "c1d1a87a0c5542864069d4d6b7491d60a53d55f5",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-swag",
                "org.opencontainers.image.title": "Swag",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-swag/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "3.1.0-ls361"
              },
              "State": "running",
              "Status": "Up 4 days",
              "HostConfig": {
                "NetworkMode": "swag_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "swag_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "72:3c:2d:63:7f:4a",
                    "NetworkID": "ac0e4b0040c282934c7efd65d8d32933e89bbb2b7d349e6f268d658e9322499f",
                    "EndpointID": "3f7d2d1bb5c742a4567ffd5c6a8f626d0048c2448ff67af7ae9a61066d2a0315",
                    "Gateway": "172.19.0.1",
                    "IPAddress": "172.19.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/etc/config/swag",
                  "Destination": "/config",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "32052f89e4603190e040278b53e7e24d1527c6b1c34377428a8eb661cbec3f8d",
              "Names": [
                "/mealie"
              ],
              "Image": "ghcr.io/mealie-recipes/mealie:v1.12.0",
              "ImageID": "sha256:83b90539d35895fa6813ea21de8cc6e757f74719e5595c3c01c01a1dbe14c695",
              "Command": "/app/run.sh",
              "Created": 1729377378,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 9000,
                  "PublicPort": 9050,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 9000,
                  "PublicPort": 9050,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "0c640f9f337ca85044fe91f03fc2a84595e10de5b42bd3653d22e9d1d6e3c0e3",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.depends_on": "",
                "com.docker.compose.image": "sha256:83b90539d35895fa6813ea21de8cc6e757f74719e5595c3c01c01a1dbe14c695",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "mealie",
                "com.docker.compose.project.config_files": "/data/compose/13/docker-compose.yml",
                "com.docker.compose.project.working_dir": "/data/compose/13",
                "com.docker.compose.service": "mealie",
                "com.docker.compose.version": "2.29.2"
              },
              "State": "running",
              "Status": "Up 4 days (healthy)",
              "HostConfig": {
                "NetworkMode": "mealie_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "mealie_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "a6:db:75:42:7f:7b",
                    "NetworkID": "72c89bc4cec0b0bb8c592bb216494fc08ed2ce1e739b880c5bcc1e83880f6680",
                    "EndpointID": "c4aeb817a048a3c16993c6a8de443f9af43f144804032b66925611432fa4cb86",
                    "Gateway": "172.27.0.1",
                    "IPAddress": "172.27.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "mealie_mealie-data",
                  "Source": "/var/lib/docker/volumes/mealie_mealie-data/_data",
                  "Destination": "/app/data",
                  "Driver": "local",
                  "Mode": "z",
                  "RW": true,
                  "Propagation": ""
                }
              ]
            },
            {
              "Id": "62dfd65ba8bce4d22d1e483a022a2794c93b883db54d3c9d120962a9aa9d25aa",
              "Names": [
                "/watchyourlan"
              ],
              "Image": "aceberg/watchyourlan:v2",
              "ImageID": "sha256:52dbecad949dfa7047a7a61b2ec87e4a5bf65e3bf81f1242d7cbdcf3e9c966ac",
              "Command": "./WatchYourLAN",
              "Created": 1727473428,
              "Ports": [],
              "Labels": {
                "com.docker.compose.config-hash": "dc0eef361dc605eea5305d8ca6cdc58e265298b6625e7b17c8f9495690391803",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.depends_on": "",
                "com.docker.compose.image": "sha256:52dbecad949dfa7047a7a61b2ec87e4a5bf65e3bf81f1242d7cbdcf3e9c966ac",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "watchyourlan",
                "com.docker.compose.project.config_files": "/data/compose/6/docker-compose.yml",
                "com.docker.compose.project.environment_file": "/data/compose/6/stack.env",
                "com.docker.compose.project.working_dir": "/data/compose/6",
                "com.docker.compose.service": "watchyourlan",
                "com.docker.compose.version": "2.29.2"
              },
              "State": "running",
              "Status": "Up 4 days",
              "HostConfig": {
                "NetworkMode": "host"
              },
              "NetworkSettings": {
                "Networks": {
                  "host": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "f3130d9e41d307eb167d2d68fc2f202d3293c04cd78c91a9a869d8bfba77977c",
                    "EndpointID": "0bea9e6c7933661a04e4de55541dd91d23bfd6407c2a53efcf46678a9f33920a",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "watchyourlan_watchyourlan-data",
                  "Source": "/var/lib/docker/volumes/watchyourlan_watchyourlan-data/_data",
                  "Destination": "/data/WatchYourLAN",
                  "Driver": "local",
                  "Mode": "z",
                  "RW": true,
                  "Propagation": ""
                }
              ]
            },
            {
              "Id": "89a3145ad4d619b5bcd4039d4887f8c5b9a6b50c83e8b48357857513ac0e79c1",
              "Names": [
                "/changedetection"
              ],
              "Image": "ghcr.io/dgtlmoon/changedetection.io",
              "ImageID": "sha256:9dde591f85178fd6c8fb7609e45d9389b9fc587b36ad903f6e99870da9c88851",
              "Command": "python ./changedetection.py -d /datastore",
              "Created": 1727465929,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 5000,
                  "PublicPort": 5000,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 5000,
                  "PublicPort": 5000,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "4fbec5154771b4b52965b893ac8934ff6d75e8c45240646359e1aef2a38e163a",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "changedetection",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/changedetection",
                "com.docker.compose.service": "changedetection",
                "com.docker.compose.version": "1.29.2"
              },
              "State": "running",
              "Status": "Up 4 days",
              "HostConfig": {
                "NetworkMode": "changedetection_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "changedetection_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "0a:73:d3:4a:ec:68",
                    "NetworkID": "3b84d3258dc9f9dbbb4b41c998e3f8680ed526029a30469f6ad74ac6609a4d8f",
                    "EndpointID": "713818cc8aecb64d8ebf72e4b05c1a49e20feb0356b272abab45acdf1c4ef621",
                    "Gateway": "172.21.0.1",
                    "IPAddress": "172.21.0.3",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "changedetection_changedetection-data",
                  "Source": "/var/lib/docker/volumes/changedetection_changedetection-data/_data",
                  "Destination": "/datastore",
                  "Driver": "local",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": ""
                }
              ]
            },
            {
              "Id": "0bc664d96fbd15ab45ef4a2dd31a1f2d54e576f02bd02abfb1fa606f9c2b6035",
              "Names": [
                "/changedetection_sockpuppetbrowser_1"
              ],
              "Image": "dgtlmoon/sockpuppetbrowser:latest",
              "ImageID": "sha256:2c1989c54be22a7fefc89af10cde6cec7ec641d4d21430147a2a944d1f89db53",
              "Command": "tini -- /bin/sh -c '. ./bin/activate . \u0026\u0026 python3 ./server.py'",
              "Created": 1727465927,
              "Ports": [],
              "Labels": {
                "com.docker.compose.config-hash": "9b7a0b6f775f66065c29b3e594e1f4312f0674ae7ef8b9cc72dde97dcad5a200",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "changedetection",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/changedetection",
                "com.docker.compose.service": "sockpuppetbrowser",
                "com.docker.compose.version": "1.29.2",
                "org.opencontainers.image.created": "2024-02-08T04:38:09.190Z",
                "org.opencontainers.image.description": "Chrome Headless docker images built upon alpine official image",
                "org.opencontainers.image.documentation": "https://github.com/Zenika/alpine-chrome/blob/master/README",
                "org.opencontainers.image.licenses": "Apache-2.0",
                "org.opencontainers.image.revision": "954a742aba550a21f005c02d32c9328fd38e96ae",
                "org.opencontainers.image.source": "https://github.com/Zenika/alpine-chrome",
                "org.opencontainers.image.title": "alpine-chrome",
                "org.opencontainers.image.url": "https://github.com/Zenika/alpine-chrome",
                "org.opencontainers.image.vendor": "Zenika",
                "org.opencontainers.image.version": "with-playwright"
              },
              "State": "running",
              "Status": "Up 4 days",
              "HostConfig": {
                "NetworkMode": "changedetection_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "changedetection_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "3e:17:5b:7f:24:76",
                    "NetworkID": "3b84d3258dc9f9dbbb4b41c998e3f8680ed526029a30469f6ad74ac6609a4d8f",
                    "EndpointID": "3771ae3851e87a5048a092af46e3d1fe8c6d5f5a99d5173d9bac01c5e5c98f8a",
                    "Gateway": "172.21.0.1",
                    "IPAddress": "172.21.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": []
            },
            {
              "Id": "7c78039ca7eac4b735848fc5705a1045d214879809c320ef5e47b08147bee9d7",
              "Names": [
                "/portainer"
              ],
              "Image": "portainer/portainer-ce:latest",
              "ImageID": "sha256:74dfaa2356fa9dc196cd53e47bb72fc3da4668fabc3db33957b671125e5a6891",
              "Command": "/portainer",
              "Created": 1727464716,
              "Ports": [
                {
                  "PrivatePort": 8000,
                  "Type": "tcp"
                },
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 9000,
                  "PublicPort": 9000,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 9000,
                  "PublicPort": 9000,
                  "Type": "tcp"
                },
                {
                  "PrivatePort": 9443,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "7b20cf1618538cf727208a0662d1e54dc6a67c3ba1aed7cc19e4c4a2aa9cd869",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "portainer",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/portainer",
                "com.docker.compose.service": "portainer",
                "com.docker.compose.version": "1.29.2",
                "com.docker.desktop.extension.api.version": "\u003e= 0.2.2",
                "com.docker.desktop.extension.icon": "https://portainer-io-assets.sfo2.cdn.digitaloceanspaces.com/logos/portainer.png",
                "com.docker.extension.additional-urls": "[{\"title\":\"Website\",\"url\":\"https://www.portainer.io?utm_campaign=DockerCon\u0026utm_source=DockerDesktop\"},{\"title\":\"Documentation\",\"url\":\"https://docs.portainer.io\"},{\"title\":\"Support\",\"url\":\"https://join.slack.com/t/portainer/shared_invite/zt-txh3ljab-52QHTyjCqbe5RibC2lcjKA\"}]",
                "com.docker.extension.detailed-description": "\u003cp data-renderer-start-pos=\"226\"\u003ePortainer\u0026rsquo;s Docker Desktop extension gives you access to all of Portainer\u0026rsquo;s rich management functionality within your docker desktop experience.\u003c/p\u003e\u003ch2 data-renderer-start-pos=\"374\"\u003eWith Portainer you can:\u003c/h2\u003e\u003cul\u003e\u003cli\u003eSee all your running containers\u003c/li\u003e\u003cli\u003eEasily view all of your container logs\u003c/li\u003e\u003cli\u003eConsole into containers\u003c/li\u003e\u003cli\u003eEasily deploy your code into containers using a simple form\u003c/li\u003e\u003cli\u003eTurn your YAML into custom templates for easy reuse\u003c/li\u003e\u003c/ul\u003e\u003ch2 data-renderer-start-pos=\"660\"\u003eAbout Portainer\u0026nbsp;\u003c/h2\u003e\u003cp data-renderer-start-pos=\"680\"\u003ePortainer is the worlds\u0026rsquo; most popular universal container management platform with more than 650,000 active monthly users. Portainer can be used to manage Docker Standalone, Kubernetes, Docker Swarm and Nomad environments through a single common interface. It includes a simple GitOps automation engine and a Kube API.\u0026nbsp;\u003c/p\u003e\u003cp data-renderer-start-pos=\"1006\"\u003ePortainer Business Edition is our fully supported commercial grade product for business-wide use. It includes all the functionality that businesses need to manage containers at scale. Visit \u003ca class=\"sc-jKJlTe dPfAtb\" href=\"http://portainer.io/\" title=\"http://Portainer.io\" data-renderer-mark=\"true\"\u003ePortainer.io\u003c/a\u003e to learn more about Portainer Business and \u003ca class=\"sc-jKJlTe dPfAtb\" href=\"http://portainer.io/take-3?utm_campaign=DockerCon\u0026amp;utm_source=Docker%20Desktop\" title=\"http://portainer.io/take-3?utm_campaign=DockerCon\u0026amp;utm_source=Docker%20Desktop\" data-renderer-mark=\"true\"\u003eget 3 free nodes.\u003c/a\u003e\u003c/p\u003e",
                "com.docker.extension.publisher-url": "https://www.portainer.io",
                "com.docker.extension.screenshots": "[{\"alt\": \"screenshot one\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-1.png\"},{\"alt\": \"screenshot two\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-2.png\"},{\"alt\": \"screenshot three\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-3.png\"},{\"alt\": \"screenshot four\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-4.png\"},{\"alt\": \"screenshot five\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-5.png\"},{\"alt\": \"screenshot six\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-6.png\"},{\"alt\": \"screenshot seven\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-7.png\"},{\"alt\": \"screenshot eight\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-8.png\"},{\"alt\": \"screenshot nine\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-9.png\"}]",
                "io.portainer.server": "true",
                "org.opencontainers.image.description": "Docker container management made simple, with the world’s most popular GUI-based container management platform.",
                "org.opencontainers.image.title": "Portainer",
                "org.opencontainers.image.vendor": "Portainer.io"
              },
              "State": "running",
              "Status": "Up 4 days",
              "HostConfig": {
                "NetworkMode": "portainer_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "portainer_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "5e:28:52:c0:1a:7e",
                    "NetworkID": "814c5cfaa9216fdfa839bf49564f3881faf05b3c1b843b4475cbd816915ff0ae",
                    "EndpointID": "b888a1c512386635d91a0c3a927a7901f2dd4f3cc5eea03899c6b36d675ad439",
                    "Gateway": "172.24.0.1",
                    "IPAddress": "172.24.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "portainer_portainer_data",
                  "Source": "/var/lib/docker/volumes/portainer_portainer_data/_data",
                  "Destination": "/data",
                  "Driver": "local",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": ""
                },
                {
                  "Type": "bind",
                  "Source": "/var/run/docker.sock",
                  "Destination": "/var/run/docker.sock",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "83d1e7ded5f594462e95cf0344a466ae9d629ab003f4ea8c0eb5e079de1765c4",
              "Names": [
                "/Dashy"
              ],
              "Image": "lissy93/dashy",
              "ImageID": "sha256:d312df81de7b697c56f9cbd859644457bc245a92a81a2bbe317da78f648ec3de",
              "Command": "docker-entrypoint.sh yarn build-and-start",
              "Created": 1727237417,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 8080,
                  "PublicPort": 7070,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 8080,
                  "PublicPort": 7070,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "228679678f4672287acb0b36c470b828d6085df617c3ab764f4c041ac93adea8",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "dashy",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/dashy",
                "com.docker.compose.service": "dashy",
                "com.docker.compose.version": "1.29.2",
                "maintainer": "Lissy93",
                "org.opencontainers.image.authors": "Alicia Sykes",
                "org.opencontainers.image.created": "2024-09-01T17:08:58.315Z",
                "org.opencontainers.image.description": "A self-hosted startpage for your server",
                "org.opencontainers.image.documentation": "https://dashy.to/docs",
                "org.opencontainers.image.licenses": "MIT",
                "org.opencontainers.image.revision": "bede08c00c9938287bb3e5304db138874e9b6154",
                "org.opencontainers.image.source": "https://github.com/Lissy93/dashy",
                "org.opencontainers.image.title": "Dashy",
                "org.opencontainers.image.url": "https://github.com/Lissy93/dashy",
                "org.opencontainers.image.version": "latest"
              },
              "State": "running",
              "Status": "Up 4 days (healthy)",
              "HostConfig": {
                "NetworkMode": "dashy_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "dashy_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "aa:ec:55:ff:31:be",
                    "NetworkID": "42df33a202fb71aab44ddc53a98b529252822f7f1f03e4632ce7c739f63dd182",
                    "EndpointID": "64c35b53dee9c843f024cf781be8599e1e836c60a254c8cc1470f823a283b4f2",
                    "Gateway": "172.23.0.1",
                    "IPAddress": "172.23.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/docker/dashy/my-config.yml",
                  "Destination": "/app/user-data/conf.yml",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "7e788f47460e23ec44a6d41e78f57608ef05eb6ed42b651557a91cc6eab14671",
              "Names": [
                "/signal-cli_signal-cli_1"
              ],
              "Image": "bbernhard/signal-cli-rest-api",
              "ImageID": "sha256:373dfc197ee302d531981bf51802c93921143b289942200fdb0c7e1e861a6f2c",
              "Command": "/entrypoint.sh",
              "Created": 1727059694,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 8080,
                  "PublicPort": 8080,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 8080,
                  "PublicPort": 8080,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "276a287b06d6847eeb8a5b1753f0645693c0c504528aea64db5f80dd21deb082",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "signal-cli",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/signal-cli",
                "com.docker.compose.service": "signal-cli",
                "com.docker.compose.version": "1.29.2",
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.version": "22.04"
              },
              "State": "running",
              "Status": "Up 4 days (healthy)",
              "HostConfig": {
                "NetworkMode": "signal-cli_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "signal-cli_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "ba:9a:ed:e2:8d:40",
                    "NetworkID": "b6feac8cfe4bccc3438dab8d5acd4d6ba987405841601de4ec5ca6e13d881c59",
                    "EndpointID": "197a83442a96f749792530aa9f48402def20cd135408623736523eb216428e37",
                    "Gateway": "172.22.0.1",
                    "IPAddress": "172.22.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/.local/share/signal-api",
                  "Destination": "/home/.local/share/signal-cli",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "8d6453e7ce67fa6591f5d3b46f43d9ad76cc753b5285b200541d609dbd26985a",
              "Names": [
                "/ntfy"
              ],
              "Image": "binwiederhier/ntfy",
              "ImageID": "sha256:e05d03a57f52e92fa345d4f5baecd46e9edb56de23c9f82c4c9de1d85470b914",
              "Command": "ntfy serve",
              "Created": 1726868217,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 80,
                  "PublicPort": 7000,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 80,
                  "PublicPort": 7000,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "d3f3795db5b1807fd7ae8b995c97183c41dcf863fc41262cfb3a1a65a06957b1",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "ntfy",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/ntfy",
                "com.docker.compose.service": "ntfy",
                "com.docker.compose.version": "1.29.2",
                "org.opencontainers.image.authors": "philipp.heckel@gmail.com",
                "org.opencontainers.image.description": "Send push notifications to your phone or desktop using PUT/POST",
                "org.opencontainers.image.documentation": "https://docs.ntfy.sh/",
                "org.opencontainers.image.licenses": "Apache-2.0, GPL-2.0",
                "org.opencontainers.image.source": "https://github.com/binwiederhier/ntfy",
                "org.opencontainers.image.title": "ntfy",
                "org.opencontainers.image.url": "https://ntfy.sh/",
                "org.opencontainers.image.vendor": "Philipp C. Heckel"
              },
              "State": "running",
              "Status": "Up 4 days",
              "HostConfig": {
                "NetworkMode": "ntfy_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "ntfy_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "1a:1b:ed:a4:83:8b",
                    "NetworkID": "dda4b741d6bc16476c3f5c34981784e39b888d41c8f297cee1a0cdf8ec4d3305",
                    "EndpointID": "1e2e2f5125bd228c7ef31bf44d4f392f9954de9311a39b873cb6d6d8ac552821",
                    "Gateway": "172.20.0.1",
                    "IPAddress": "172.20.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/docker/ntfy/db",
                  "Destination": "/var/lib/ntfy",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/home/csw/docker/ntfy/config",
                  "Destination": "/etc/ntfy",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/home/csw/docker/ntfy/cache",
                  "Destination": "/var/cache/ntfy",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "755e50b89058d7bbd59d12af44a87f79dc4d10ca8dc3a34cb6368875977e913e",
              "Names": [
                "/uptime-kuma"
              ],
              "Image": "louislam/uptime-kuma",
              "ImageID": "sha256:e1ca7233c2fa8bf5680066e2fcbd37850ca0e0273920b9f694c7747b0ecaec2e",
              "Command": "/usr/bin/dumb-init -- extra/entrypoint.sh node server/server.js",
              "Created": 1726013259,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 3001,
                  "PublicPort": 3001,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 3001,
                  "PublicPort": 3001,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "89489852c7df4cf56e0c92b2dbfa02eb99e92e7b29ed82a947f21aab0a2724c9",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "uptime-kuma",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/uptime-kuma",
                "com.docker.compose.service": "uptime-kuma",
                "com.docker.compose.version": "1.29.2"
              },
              "State": "running",
              "Status": "Up 4 days (healthy)",
              "HostConfig": {
                "NetworkMode": "uptime-kuma_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "uptime-kuma_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "c6:7a:14:ef:b4:16",
                    "NetworkID": "1b6903cb882d27e3ec231077c21f0bd741c1e39bd7fe13e4ab9027c9bd727d49",
                    "EndpointID": "67437fa469b9e8babfd9969fac56f18a8a1b048eb99de3c8f83b9e64e29010b7",
                    "Gateway": "172.18.0.1",
                    "IPAddress": "172.18.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "uptime-kuma_uptime-kuma-data",
                  "Source": "/var/lib/docker/volumes/uptime-kuma_uptime-kuma-data/_data",
                  "Destination": "/app/data",
                  "Driver": "local",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": ""
                }
              ]
            }
          ],
          "Volumes": {
            "Volumes": [
              {
                "CreatedAt": "2024-09-27T19:18:22Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "portainer",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "portainer_data"
                },
                "Mountpoint": "/var/lib/docker/volumes/portainer_portainer_data/_data",
                "Name": "portainer_portainer_data",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-27T21:43:48Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "watchyourlan",
                  "com.docker.compose.version": "2.29.2",
                  "com.docker.compose.volume": "watchyourlan-data"
                },
                "Mountpoint": "/var/lib/docker/volumes/watchyourlan_watchyourlan-data/_data",
                "Name": "watchyourlan_watchyourlan-data",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-05-15T02:26:29Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "owncloud",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "mysql"
                },
                "Mountpoint": "/var/lib/docker/volumes/owncloud_mysql/_data",
                "Name": "owncloud_mysql",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-05-15T02:26:29Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "owncloud",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "redis"
                },
                "Mountpoint": "/var/lib/docker/volumes/owncloud_redis/_data",
                "Name": "owncloud_redis",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-11T00:07:07Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "uptime-kuma",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "uptime-kuma-data"
                },
                "Mountpoint": "/var/lib/docker/volumes/uptime-kuma_uptime-kuma-data/_data",
                "Name": "uptime-kuma_uptime-kuma-data",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-27T21:36:18Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/watchyourlan-data/_data",
                "Name": "watchyourlan-data",
                "Options": {},
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-03T21:40:31Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/1a08907ba00a073fc1e639f836703fcef15cf54dec2b2fbdf71646e3fd63c6ae/_data",
                "Name": "1a08907ba00a073fc1e639f836703fcef15cf54dec2b2fbdf71646e3fd63c6ae",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-03T21:43:50Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/424bd7c6fe2e62de81f2da0a8d46c6df8c5a12c5abf635dc1e4c6c385b021e4b/_data",
                "Name": "424bd7c6fe2e62de81f2da0a8d46c6df8c5a12c5abf635dc1e4c6c385b021e4b",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-22T18:41:02Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "changedetection",
                  "com.docker.compose.version": "2.29.6",
                  "com.docker.compose.volume": "changedetection-data"
                },
                "Mountpoint": "/var/lib/docker/volumes/changedetection_changedetection-data/_data",
                "Name": "changedetection_changedetection-data",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-10-19T22:33:18Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "mealie",
                  "com.docker.compose.version": "2.29.2",
                  "com.docker.compose.volume": "mealie-data"
                },
                "Mountpoint": "/var/lib/docker/volumes/mealie_mealie-data/_data",
                "Name": "mealie_mealie-data",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-05-15T02:26:29Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "owncloud",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "files"
                },
                "Mountpoint": "/var/lib/docker/volumes/owncloud_files/_data",
                "Name": "owncloud_files",
                "Options": null,
                "Scope": "local"
              }
            ],
            "Warnings": null
          },
          "Networks": [
            {
              "Name": "ntfy_default",
              "Id": "dda4b741d6bc16476c3f5c34981784e39b888d41c8f297cee1a0cdf8ec4d3305",
              "Created": "2024-09-20T21:36:56.723730592Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.20.0.0/16",
                    "Gateway": "172.20.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "ntfy",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "changedetection_default",
              "Id": "3b84d3258dc9f9dbbb4b41c998e3f8680ed526029a30469f6ad74ac6609a4d8f",
              "Created": "2024-09-27T19:38:47.525233561Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.21.0.0/16",
                    "Gateway": "172.21.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "changedetection",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "mealie_default",
              "Id": "72c89bc4cec0b0bb8c592bb216494fc08ed2ce1e739b880c5bcc1e83880f6680",
              "Created": "2024-10-19T22:36:17.761981594Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.27.0.0/16",
                    "Gateway": "172.27.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "mealie",
                "com.docker.compose.version": "2.29.2"
              }
            },
            {
              "Name": "none",
              "Id": "92ce20ce3222d7aef9f1c6f0ecd95afeed9d45895441b69d56239f636b9f3708",
              "Created": "2024-02-28T02:33:25.269711258Z",
              "Scope": "local",
              "Driver": "null",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": null
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {}
            },
            {
              "Name": "swag_default",
              "Id": "ac0e4b0040c282934c7efd65d8d32933e89bbb2b7d349e6f268d658e9322499f",
              "Created": "2025-02-05T20:02:08.422315003Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.19.0.0/16",
                    "Gateway": "172.19.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "swag",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "minecraft_default",
              "Id": "d31f776cd826172e6aad261ffa88f614cb18a2e3d016f3b2a707f61fdfea7d7b",
              "Created": "2025-06-17T23:54:45.467529004Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.26.0.0/16",
                    "Gateway": "172.26.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "minecraft",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "host",
              "Id": "f3130d9e41d307eb167d2d68fc2f202d3293c04cd78c91a9a869d8bfba77977c",
              "Created": "2024-02-28T02:33:25.371835644Z",
              "Scope": "local",
              "Driver": "host",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": null
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {}
            },
            {
              "Name": "bridge",
              "Id": "891cf21451d063cd4d10f5f0865a9c1c82649b0ce879e1ba39c21c1d17c7574d",
              "Created": "2025-09-01T04:43:30.661635129Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.17.0.0/16",
                    "Gateway": "172.17.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {
                "com.docker.network.bridge.default_bridge": "true",
                "com.docker.network.bridge.enable_icc": "true",
                "com.docker.network.bridge.enable_ip_masquerade": "true",
                "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
                "com.docker.network.bridge.name": "docker0",
                "com.docker.network.driver.mtu": "1500"
              },
              "Labels": {}
            },
            {
              "Name": "uptime-kuma_default",
              "Id": "1b6903cb882d27e3ec231077c21f0bd741c1e39bd7fe13e4ab9027c9bd727d49",
              "Created": "2024-09-11T00:07:06.843780341Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.18.0.0/16",
                    "Gateway": "172.18.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "uptime-kuma",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "dashy_default",
              "Id": "42df33a202fb71aab44ddc53a98b529252822f7f1f03e4632ce7c739f63dd182",
              "Created": "2024-09-25T04:10:17.613196321Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.23.0.0/16",
                    "Gateway": "172.23.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "dashy",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "webproxy",
              "Id": "6b1c5a89c246682638de259d9a25e6332ffce7fca55a5fa437b3353ba78dadca",
              "Created": "2024-05-18T13:20:35.521002398Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": {},
                "Config": [
                  {
                    "Subnet": "172.25.0.0/16",
                    "Gateway": "172.25.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {}
            },
            {
              "Name": "portainer_default",
              "Id": "814c5cfaa9216fdfa839bf49564f3881faf05b3c1b843b4475cbd816915ff0ae",
              "Created": "2024-09-27T19:18:22.49258369Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.24.0.0/16",
                    "Gateway": "172.24.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "portainer",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "signal-cli_default",
              "Id": "b6feac8cfe4bccc3438dab8d5acd4d6ba987405841601de4ec5ca6e13d881c59",
              "Created": "2024-09-23T02:39:51.27677636Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.22.0.0/16",
                    "Gateway": "172.22.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "signal-cli",
                "com.docker.compose.version": "1.29.2"
              }
            }
          ],
          "Images": [
            {
              "Containers": -1,
              "Created": 1753090671,
              "Id": "sha256:b23d34fad1e339ea2f7a39938c3aba56258b7146e097e68f9633ef9621c06752",
              "Labels": {
                "build_version": "Linuxserver.io version:- 1.41.9.9961-46083195d-ls274 Build-date:- 2025-07-21T09:36:12+00:00",
                "maintainer": "thelamer",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-07-21T09:36:12+00:00",
                "org.opencontainers.image.description": "[Plex](https://plex.tv) organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. Straightforward design and bulk actions mean getting things done faster.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-plex",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "54bac1c3cf15128ecf7832fda93eb5378ac804a1",
                "org.opencontainers.image.revision": "54bac1c3cf15128ecf7832fda93eb5378ac804a1",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-plex",
                "org.opencontainers.image.title": "Plex",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-plex/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "1.41.9.9961-46083195d-ls274"
              },
              "ParentId": "",
              "RepoDigests": [
                "lscr.io/linuxserver/plex@sha256:f8ed359f87f1becab37c2586af9f3414bd5c604d031d47f75e8422baf5224ef5"
              ],
              "RepoTags": [
                "lscr.io/linuxserver/plex:latest"
              ],
              "SharedSize": -1,
              "Size": 369892481
            },
            {
              "Containers": -1,
              "Created": 1738380917,
              "Id": "sha256:660a81ea64c53991fc358a8cd5b2d3d232de86611064366dfc95f4ddf45885f2",
              "Labels": {
                "build_version": "Linuxserver.io version:- 3.1.0-ls361 Build-date:- 2025-02-01T03:33:29+00:00",
                "maintainer": "nemchik",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-02-01T03:33:29+00:00",
                "org.opencontainers.image.description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-swag",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "c1d1a87a0c5542864069d4d6b7491d60a53d55f5",
                "org.opencontainers.image.revision": "c1d1a87a0c5542864069d4d6b7491d60a53d55f5",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-swag",
                "org.opencontainers.image.title": "Swag",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-swag/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "3.1.0-ls361"
              },
              "ParentId": "",
              "RepoDigests": [
                "lscr.io/linuxserver/swag@sha256:4f104d503dbf1fdf6c74f29d91fe81bdeb834c6d6952c7473824469e7082fe83"
              ],
              "RepoTags": [
                "lscr.io/linuxserver/swag:latest"
              ],
              "SharedSize": -1,
              "Size": 399578287
            },
            {
              "Containers": -1,
              "Created": 1727126131,
              "Id": "sha256:74dfaa2356fa9dc196cd53e47bb72fc3da4668fabc3db33957b671125e5a6891",
              "Labels": {
                "com.docker.desktop.extension.api.version": "\u003e= 0.2.2",
                "com.docker.desktop.extension.icon": "https://portainer-io-assets.sfo2.cdn.digitaloceanspaces.com/logos/portainer.png",
                "com.docker.extension.additional-urls": "[{\"title\":\"Website\",\"url\":\"https://www.portainer.io?utm_campaign=DockerCon\u0026utm_source=DockerDesktop\"},{\"title\":\"Documentation\",\"url\":\"https://docs.portainer.io\"},{\"title\":\"Support\",\"url\":\"https://join.slack.com/t/portainer/shared_invite/zt-txh3ljab-52QHTyjCqbe5RibC2lcjKA\"}]",
                "com.docker.extension.detailed-description": "\u003cp data-renderer-start-pos=\"226\"\u003ePortainer\u0026rsquo;s Docker Desktop extension gives you access to all of Portainer\u0026rsquo;s rich management functionality within your docker desktop experience.\u003c/p\u003e\u003ch2 data-renderer-start-pos=\"374\"\u003eWith Portainer you can:\u003c/h2\u003e\u003cul\u003e\u003cli\u003eSee all your running containers\u003c/li\u003e\u003cli\u003eEasily view all of your container logs\u003c/li\u003e\u003cli\u003eConsole into containers\u003c/li\u003e\u003cli\u003eEasily deploy your code into containers using a simple form\u003c/li\u003e\u003cli\u003eTurn your YAML into custom templates for easy reuse\u003c/li\u003e\u003c/ul\u003e\u003ch2 data-renderer-start-pos=\"660\"\u003eAbout Portainer\u0026nbsp;\u003c/h2\u003e\u003cp data-renderer-start-pos=\"680\"\u003ePortainer is the worlds\u0026rsquo; most popular universal container management platform with more than 650,000 active monthly users. Portainer can be used to manage Docker Standalone, Kubernetes, Docker Swarm and Nomad environments through a single common interface. It includes a simple GitOps automation engine and a Kube API.\u0026nbsp;\u003c/p\u003e\u003cp data-renderer-start-pos=\"1006\"\u003ePortainer Business Edition is our fully supported commercial grade product for business-wide use. It includes all the functionality that businesses need to manage containers at scale. Visit \u003ca class=\"sc-jKJlTe dPfAtb\" href=\"http://portainer.io/\" title=\"http://Portainer.io\" data-renderer-mark=\"true\"\u003ePortainer.io\u003c/a\u003e to learn more about Portainer Business and \u003ca class=\"sc-jKJlTe dPfAtb\" href=\"http://portainer.io/take-3?utm_campaign=DockerCon\u0026amp;utm_source=Docker%20Desktop\" title=\"http://portainer.io/take-3?utm_campaign=DockerCon\u0026amp;utm_source=Docker%20Desktop\" data-renderer-mark=\"true\"\u003eget 3 free nodes.\u003c/a\u003e\u003c/p\u003e",
                "com.docker.extension.publisher-url": "https://www.portainer.io",
                "com.docker.extension.screenshots": "[{\"alt\": \"screenshot one\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-1.png\"},{\"alt\": \"screenshot two\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-2.png\"},{\"alt\": \"screenshot three\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-3.png\"},{\"alt\": \"screenshot four\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-4.png\"},{\"alt\": \"screenshot five\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-5.png\"},{\"alt\": \"screenshot six\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-6.png\"},{\"alt\": \"screenshot seven\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-7.png\"},{\"alt\": \"screenshot eight\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-8.png\"},{\"alt\": \"screenshot nine\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-9.png\"}]",
                "io.portainer.server": "true",
                "org.opencontainers.image.description": "Docker container management made simple, with the world’s most popular GUI-based container management platform.",
                "org.opencontainers.image.title": "Portainer",
                "org.opencontainers.image.vendor": "Portainer.io"
              },
              "ParentId": "",
              "RepoDigests": [
                "portainer/portainer-ce@sha256:fcd79694da039537aa4c287f0e0a140f6d356fec3128774523e77fc66e0b6de3"
              ],
              "RepoTags": [
                "portainer/portainer-ce:latest"
              ],
              "SharedSize": -1,
              "Size": 300829220
            },
            {
              "Containers": -1,
              "Created": 1726590199,
              "Id": "sha256:52dbecad949dfa7047a7a61b2ec87e4a5bf65e3bf81f1242d7cbdcf3e9c966ac",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "aceberg/watchyourlan@sha256:d506d562fa04e3400cd421532ebb93800e3ac5694c168a713104287fe8b0116e"
              ],
              "RepoTags": [
                "aceberg/watchyourlan:v2"
              ],
              "SharedSize": -1,
              "Size": 38271318
            },
            {
              "Containers": -1,
              "Created": 1725451101,
              "Id": "sha256:9dde591f85178fd6c8fb7609e45d9389b9fc587b36ad903f6e99870da9c88851",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "ghcr.io/dgtlmoon/changedetection.io@sha256:cfe4379f448e71ed7c0030b00562c678f5349d0b209b8d4985df20826af38e93"
              ],
              "RepoTags": [
                "ghcr.io/dgtlmoon/changedetection.io:latest"
              ],
              "SharedSize": -1,
              "Size": 515267298
            },
            {
              "Containers": -1,
              "Created": 1725210757,
              "Id": "sha256:d312df81de7b697c56f9cbd859644457bc245a92a81a2bbe317da78f648ec3de",
              "Labels": {
                "maintainer": "Lissy93",
                "org.opencontainers.image.authors": "Alicia Sykes",
                "org.opencontainers.image.created": "2024-09-01T17:08:58.315Z",
                "org.opencontainers.image.description": "A self-hosted startpage for your server",
                "org.opencontainers.image.documentation": "https://dashy.to/docs",
                "org.opencontainers.image.licenses": "MIT",
                "org.opencontainers.image.revision": "bede08c00c9938287bb3e5304db138874e9b6154",
                "org.opencontainers.image.source": "https://github.com/Lissy93/dashy",
                "org.opencontainers.image.title": "Dashy",
                "org.opencontainers.image.url": "https://github.com/Lissy93/dashy",
                "org.opencontainers.image.version": "latest"
              },
              "ParentId": "",
              "RepoDigests": [
                "lissy93/dashy@sha256:1ae179850c795d1325472bca8f0d7a8f59e541d98c3d34923b70cef4f951343e"
              ],
              "RepoTags": [
                "lissy93/dashy:latest"
              ],
              "SharedSize": -1,
              "Size": 522333041
            },
            {
              "Containers": -1,
              "Created": 1725049153,
              "Id": "sha256:a15d08379ac66dc014da7e7260c4d60f6cf1404325d11624717c26fba2081275",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "ghost@sha256:37526c595a1fcfc3afeffcf642c31b85d3dcaf8691f267a7ac7b1923aeb14efb"
              ],
              "RepoTags": [
                "ghost:latest"
              ],
              "SharedSize": -1,
              "Size": 585447923
            },
            {
              "Containers": -1,
              "Created": 1724238839,
              "Id": "sha256:83b90539d35895fa6813ea21de8cc6e757f74719e5595c3c01c01a1dbe14c695",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "ghcr.io/mealie-recipes/mealie@sha256:88e8e12542e9a2733c07f175682dc69e7360becb6137d604bb087a71ab33c5fe"
              ],
              "RepoTags": [
                "ghcr.io/mealie-recipes/mealie:v1.12.0"
              ],
              "SharedSize": -1,
              "Size": 448585432
            },
            {
              "Containers": -1,
              "Created": 1723392552,
              "Id": "sha256:373dfc197ee302d531981bf51802c93921143b289942200fdb0c7e1e861a6f2c",
              "Labels": {
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.version": "22.04"
              },
              "ParentId": "",
              "RepoDigests": [
                "bbernhard/signal-cli-rest-api@sha256:9d0b8dfb10c4a421c60ad68794f0200fab0526e0255dacfeb311976fc5bf3adf"
              ],
              "RepoTags": [
                "bbernhard/signal-cli-rest-api:latest"
              ],
              "SharedSize": -1,
              "Size": 833954544
            },
            {
              "Containers": -1,
              "Created": 1722605183,
              "Id": "sha256:51927360d3b9f9259028e592a4069d93f3f227b0401809e5f95fbcd1a611aeb9",
              "Labels": {
                "maintainer": "Martin Hasoň \u003cmartin.hason@gmail.com\u003e"
              },
              "ParentId": "",
              "RepoDigests": [
                "minidocks/mkdocs@sha256:126e34ec70c36ffa64c2ef6cc483990fe78c574c9fce52d82701043ed8e9c59b"
              ],
              "RepoTags": [
                "minidocks/mkdocs:latest"
              ],
              "SharedSize": -1,
              "Size": 153045890
            },
            {
              "Containers": -1,
              "Created": 1720777910,
              "Id": "sha256:2c1989c54be22a7fefc89af10cde6cec7ec641d4d21430147a2a944d1f89db53",
              "Labels": {
                "org.opencontainers.image.created": "2024-02-08T04:38:09.190Z",
                "org.opencontainers.image.description": "Chrome Headless docker images built upon alpine official image",
                "org.opencontainers.image.documentation": "https://github.com/Zenika/alpine-chrome/blob/master/README",
                "org.opencontainers.image.licenses": "Apache-2.0",
                "org.opencontainers.image.revision": "954a742aba550a21f005c02d32c9328fd38e96ae",
                "org.opencontainers.image.source": "https://github.com/Zenika/alpine-chrome",
                "org.opencontainers.image.title": "alpine-chrome",
                "org.opencontainers.image.url": "https://github.com/Zenika/alpine-chrome",
                "org.opencontainers.image.vendor": "Zenika",
                "org.opencontainers.image.version": "with-playwright"
              },
              "ParentId": "",
              "RepoDigests": [
                "dgtlmoon/sockpuppetbrowser@sha256:ebe309621d97c47d86669a4c393a392e26a01a6ded0fc87c78813f56a0d6597e"
              ],
              "RepoTags": [
                "dgtlmoon/sockpuppetbrowser:latest"
              ],
              "SharedSize": -1,
              "Size": 1207523862
            },
            {
              "Containers": -1,
              "Created": 1718478386,
              "Id": "sha256:88981ea874cfe2d829da99fa9e42ce6478047cc56e5d1824072eb7f99f2ca511",
              "Labels": {
                "org.opencontainers.image.authors": "Geoff Bourne \u003citzgeoff@gmail.com\u003e",
                "org.opencontainers.image.created": "2024-06-18T20:14:17.686Z",
                "org.opencontainers.image.description": "Docker image that provides a Minecraft Server that will automatically download selected version at startup",
                "org.opencontainers.image.licenses": "Apache-2.0",
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.revision": "3349df764e50048afac5b3bcde9f01040e2b8e1e",
                "org.opencontainers.image.source": "https://github.com/itzg/docker-minecraft-server",
                "org.opencontainers.image.title": "docker-minecraft-server",
                "org.opencontainers.image.url": "https://github.com/itzg/docker-minecraft-server",
                "org.opencontainers.image.version": "java21"
              },
              "ParentId": "",
              "RepoDigests": [
                "itzg/minecraft-server@sha256:59cab528e80b4ac86ab6d5e0dd1046b96f3a608f0fc396c4dc095e85cb95f709"
              ],
              "RepoTags": [
                "itzg/minecraft-server:latest"
              ],
              "SharedSize": -1,
              "Size": 951053176
            },
            {
              "Containers": -1,
              "Created": 1715631561,
              "Id": "sha256:e05d03a57f52e92fa345d4f5baecd46e9edb56de23c9f82c4c9de1d85470b914",
              "Labels": {
                "org.opencontainers.image.authors": "philipp.heckel@gmail.com",
                "org.opencontainers.image.description": "Send push notifications to your phone or desktop using PUT/POST",
                "org.opencontainers.image.documentation": "https://docs.ntfy.sh/",
                "org.opencontainers.image.licenses": "Apache-2.0, GPL-2.0",
                "org.opencontainers.image.source": "https://github.com/binwiederhier/ntfy",
                "org.opencontainers.image.title": "ntfy",
                "org.opencontainers.image.url": "https://ntfy.sh/",
                "org.opencontainers.image.vendor": "Philipp C. Heckel"
              },
              "ParentId": "",
              "RepoDigests": [
                "binwiederhier/ntfy@sha256:4a7d0f0adc6d5d9fc36e64ab55ef676e76e124a2bdd50ce115b6d9c1c7430294"
              ],
              "RepoTags": [
                "binwiederhier/ntfy:latest"
              ],
              "SharedSize": -1,
              "Size": 56944261
            },
            {
              "Containers": -1,
              "Created": 1714994335,
              "Id": "sha256:c2ef7ac2d40dd8818a38bf601b4cb54a1b21bc00dabe9e1aa4a239fcc59c3c7e",
              "Labels": {
                "org.opencontainers.image.authors": "quentin.mcgaw@gmail.com",
                "org.opencontainers.image.created": "2024-05-06T11:16:06.246Z",
                "org.opencontainers.image.description": "Container to update DNS records periodically with WebUI for many DNS providers",
                "org.opencontainers.image.documentation": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.licenses": "MIT",
                "org.opencontainers.image.revision": "542e89536c524cdb2215a48384af7ef6fad2c443",
                "org.opencontainers.image.source": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.title": "ddns-updater",
                "org.opencontainers.image.url": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.version": "latest"
              },
              "ParentId": "",
              "RepoDigests": [
                "qmcgaw/ddns-updater@sha256:e4609e9e5d4a30a19f80384037022c1c57c39767946f007679457be262eadc25"
              ],
              "RepoTags": [
                "qmcgaw/ddns-updater:latest"
              ],
              "SharedSize": -1,
              "Size": 16982168
            },
            {
              "Containers": -1,
              "Created": 1714641248,
              "Id": "sha256:fa429e56799220156d8a3a3dceb88f6dd0745718f1dbb04618b03131658ce01a",
              "Labels": {
                "maintainer": "ownCloud GmbH \u003cdevops@owncloud.com\u003e",
                "org.opencontainers.image.authors": "ownCloud DevOps \u003cdevops@owncloud.com\u003e",
                "org.opencontainers.image.description": "ownCloud - Secure Collaboration Platform",
                "org.opencontainers.image.documentation": "https://github.com/owncloud-docker/server",
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.source": "https://github.com/owncloud-docker/server",
                "org.opencontainers.image.title": "ownCloud Server",
                "org.opencontainers.image.url": "https://hub.docker.com/r/owncloud/server",
                "org.opencontainers.image.vendor": "ownCloud GmbH",
                "org.opencontainers.image.version": "20.04"
              },
              "ParentId": "",
              "RepoDigests": [
                "owncloud/server@sha256:c545d5e1164c3bfa5907c5d9c7b69db68240d301a66ebd1af55fd178fa00ecf9"
              ],
              "RepoTags": [
                "owncloud/server:10.14"
              ],
              "SharedSize": -1,
              "Size": 1054880402
            },
            {
              "Containers": -1,
              "Created": 1714030187,
              "Id": "sha256:e1ca7233c2fa8bf5680066e2fcbd37850ca0e0273920b9f694c7747b0ecaec2e",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "louislam/uptime-kuma@sha256:96510915e6be539b76bcba2e6873591c67aca8a6075ff09f5b4723ae47f333fc"
              ],
              "RepoTags": [
                "louislam/uptime-kuma:latest"
              ],
              "SharedSize": -1,
              "Size": 435610059
            },
            {
              "Containers": -1,
              "Created": 1712353990,
              "Id": "sha256:95ec5b17a0f9aa407968a810b50b1afb3a06111d36f04b6ce4a67d0c7803b75f",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "redis@sha256:9adbc930ff5c9124000ecd8962a98560190e085d4a425704c9a36ef014070f12"
              ],
              "RepoTags": [
                "redis:6"
              ],
              "SharedSize": -1,
              "Size": 105912749
            },
            {
              "Containers": -1,
              "Created": 1712092916,
              "Id": "sha256:a909abdebd11f367afac0ffe0b1c7945b5ecfa4f0807204ac5363b5a551f4aad",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "certbot/certbot@sha256:8d785998c367a7c1058f9b8878fce4c728c725b4ba0fef57ed5322ef38b82613"
              ],
              "RepoTags": [
                "certbot/certbot:latest"
              ],
              "SharedSize": -1,
              "Size": 110495052
            },
            {
              "Containers": -1,
              "Created": 1708563794,
              "Id": "sha256:465bc4da7f09154d5e38fd1374734688fd78842b6b01790a69ac3e4a5abed2e1",
              "Labels": {
                "org.opencontainers.image.authors": "MariaDB Community",
                "org.opencontainers.image.base.name": "docker.io/library/ubuntu:jammy",
                "org.opencontainers.image.description": "MariaDB Database for relational SQL",
                "org.opencontainers.image.documentation": "https://hub.docker.com/_/mariadb/",
                "org.opencontainers.image.licenses": "GPL-2.0",
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.source": "https://github.com/MariaDB/mariadb-docker",
                "org.opencontainers.image.title": "MariaDB Database",
                "org.opencontainers.image.url": "https://github.com/MariaDB/mariadb-docker",
                "org.opencontainers.image.vendor": "MariaDB Community",
                "org.opencontainers.image.version": "11.3.2"
              },
              "ParentId": "",
              "RepoDigests": [
                "mariadb@sha256:f0a6faee9d0e55492f238d1d11ff13d77616ea12d8c38bedf090da2ee05532be"
              ],
              "RepoTags": [
                "mariadb:latest"
              ],
              "SharedSize": -1,
              "Size": 404812972
            },
            {
              "Containers": -1,
              "Created": 1708104829,
              "Id": "sha256:c6321df7e37587259bb2c5a334f5d6579dde0f4372e7ad4a13aadb066b493f92",
              "Labels": {
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.version": "22.04"
              },
              "ParentId": "",
              "RepoDigests": [
                "browserless/chrome@sha256:57d19e414d9fe4ae9d2ab12ba768c97f38d51246c5b31af55a009205c136012f"
              ],
              "RepoTags": [
                "browserless/chrome:latest"
              ],
              "SharedSize": -1,
              "Size": 3063989860
            },
            {
              "Containers": -1,
              "Created": 1683046167,
              "Id": "sha256:d2c94e258dcb3c5ac2798d32e1249e42ef01cba4841c2234249495f87264ac5a",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "hello-world@sha256:a26bff933ddc26d5cdf7faa98b4ae1e3ec20c4985e6f87ac0973052224d24302"
              ],
              "RepoTags": [
                "hello-world:latest"
              ],
              "SharedSize": -1,
              "Size": 13256
            }
          ],
          "Info": {
            "ID": "efc20542-fa3a-4c70-a3c8-419a65d71550",
            "Containers": 13,
            "ContainersRunning": 13,
            "ContainersPaused": 0,
            "ContainersStopped": 0,
            "Images": 21,
            "Driver": "overlay2",
            "DriverStatus": [
              [
                "Backing Filesystem",
                "extfs"
              ],
              [
                "Supports d_type",
                "true"
              ],
              [
                "Using metacopy",
                "false"
              ],
              [
                "Native Overlay Diff",
                "true"
              ],
              [
                "userxattr",
                "false"
              ]
            ],
            "Plugins": {
              "Volume": [
                "local"
              ],
              "Network": [
                "bridge",
                "host",
                "ipvlan",
                "macvlan",
                "null",
                "overlay"
              ],
              "Authorization": null,
              "Log": [
                "awslogs",
                "fluentd",
                "gcplogs",
                "gelf",
                "journald",
                "json-file",
                "local",
                "splunk",
                "syslog"
              ]
            },
            "MemoryLimit": true,
            "SwapLimit": true,
            "CpuCfsPeriod": true,
            "CpuCfsQuota": true,
            "CPUShares": true,
            "CPUSet": true,
            "PidsLimit": true,
            "IPv4Forwarding": true,
            "BridgeNfIptables": false,
            "BridgeNfIp6tables": false,
            "Debug": false,
            "NFd": 143,
            "OomKillDisable": false,
            "NGoroutines": 143,
            "SystemTime": "2025-09-06T02:54:09.790829164Z",
            "LoggingDriver": "json-file",
            "CgroupDriver": "systemd",
            "CgroupVersion": "2",
            "NEventsListener": 0,
            "KernelVersion": "5.15.0-153-generic",
            "OperatingSystem": "Ubuntu 22.04.5 LTS",
            "OSVersion": "22.04",
            "OSType": "linux",
            "Architecture": "x86_64",
            "IndexServerAddress": "https://index.docker.io/v1/",
            "RegistryConfig": {
              "AllowNondistributableArtifactsCIDRs": null,
              "AllowNondistributableArtifactsHostnames": null,
              "InsecureRegistryCIDRs": [
                "::1/128",
                "127.0.0.0/8"
              ],
              "IndexConfigs": {
                "docker.io": {
                  "Name": "docker.io",
                  "Mirrors": [],
                  "Secure": true,
                  "Official": true
                }
              },
              "Mirrors": null
            },
            "NCPU": 12,
            "MemTotal": 25136574464,
            "GenericResources": null,
            "DockerRootDir": "/var/lib/docker",
            "HttpProxy": "",
            "HttpsProxy": "",
            "NoProxy": "",
            "Name": "greasy-gold",
            "Labels": [],
            "ExperimentalBuild": false,
            "ServerVersion": "28.3.3",
            "Runtimes": {
              "io.containerd.runc.v2": {
                "path": "runc",
                "status": {
                  "org.opencontainers.runtime-spec.features": "{\"ociVersionMin\":\"1.0.0\",\"ociVersionMax\":\"1.2.0\",\"hooks\":[\"prestart\",\"createRuntime\",\"createContainer\",\"startContainer\",\"poststart\",\"poststop\"],\"mountOptions\":[\"async\",\"atime\",\"bind\",\"defaults\",\"dev\",\"diratime\",\"dirsync\",\"exec\",\"iversion\",\"lazytime\",\"loud\",\"mand\",\"noatime\",\"nodev\",\"nodiratime\",\"noexec\",\"noiversion\",\"nolazytime\",\"nomand\",\"norelatime\",\"nostrictatime\",\"nosuid\",\"nosymfollow\",\"private\",\"ratime\",\"rbind\",\"rdev\",\"rdiratime\",\"relatime\",\"remount\",\"rexec\",\"rnoatime\",\"rnodev\",\"rnodiratime\",\"rnoexec\",\"rnorelatime\",\"rnostrictatime\",\"rnosuid\",\"rnosymfollow\",\"ro\",\"rprivate\",\"rrelatime\",\"rro\",\"rrw\",\"rshared\",\"rslave\",\"rstrictatime\",\"rsuid\",\"rsymfollow\",\"runbindable\",\"rw\",\"shared\",\"silent\",\"slave\",\"strictatime\",\"suid\",\"symfollow\",\"sync\",\"tmpcopyup\",\"unbindable\"],\"linux\":{\"namespaces\":[\"cgroup\",\"ipc\",\"mount\",\"network\",\"pid\",\"time\",\"user\",\"uts\"],\"capabilities\":[\"CAP_CHOWN\",\"CAP_DAC_OVERRIDE\",\"CAP_DAC_READ_SEARCH\",\"CAP_FOWNER\",\"CAP_FSETID\",\"CAP_KILL\",\"CAP_SETGID\",\"CAP_SETUID\",\"CAP_SETPCAP\",\"CAP_LINUX_IMMUTABLE\",\"CAP_NET_BIND_SERVICE\",\"CAP_NET_BROADCAST\",\"CAP_NET_ADMIN\",\"CAP_NET_RAW\",\"CAP_IPC_LOCK\",\"CAP_IPC_OWNER\",\"CAP_SYS_MODULE\",\"CAP_SYS_RAWIO\",\"CAP_SYS_CHROOT\",\"CAP_SYS_PTRACE\",\"CAP_SYS_PACCT\",\"CAP_SYS_ADMIN\",\"CAP_SYS_BOOT\",\"CAP_SYS_NICE\",\"CAP_SYS_RESOURCE\",\"CAP_SYS_TIME\",\"CAP_SYS_TTY_CONFIG\",\"CAP_MKNOD\",\"CAP_LEASE\",\"CAP_AUDIT_WRITE\",\"CAP_AUDIT_CONTROL\",\"CAP_SETFCAP\",\"CAP_MAC_OVERRIDE\",\"CAP_MAC_ADMIN\",\"CAP_SYSLOG\",\"CAP_WAKE_ALARM\",\"CAP_BLOCK_SUSPEND\",\"CAP_AUDIT_READ\",\"CAP_PERFMON\",\"CAP_BPF\",\"CAP_CHECKPOINT_RESTORE\"],\"cgroup\":{\"v1\":true,\"v2\":true,\"systemd\":true,\"systemdUser\":true,\"rdma\":true},\"seccomp\":{\"enabled\":true,\"actions\":[\"SCMP_ACT_ALLOW\",\"SCMP_ACT_ERRNO\",\"SCMP_ACT_KILL\",\"SCMP_ACT_KILL_PROCESS\",\"SCMP_ACT_KILL_THREAD\",\"SCMP_ACT_LOG\",\"SCMP_ACT_NOTIFY\",\"SCMP_ACT_TRACE\",\"SCMP_ACT_TRAP\"],\"operators\":[\"SCMP_CMP_EQ\",\"SCMP_CMP_GE\",\"SCMP_CMP_GT\",\"SCMP_CMP_LE\",\"SCMP_CMP_LT\",\"SCMP_CMP_MASKED_EQ\",\"SCMP_CMP_NE\"],\"archs\":[\"SCMP_ARCH_AARCH64\",\"SCMP_ARCH_ARM\",\"SCMP_ARCH_MIPS\",\"SCMP_ARCH_MIPS64\",\"SCMP_ARCH_MIPS64N32\",\"SCMP_ARCH_MIPSEL\",\"SCMP_ARCH_MIPSEL64\",\"SCMP_ARCH_MIPSEL64N32\",\"SCMP_ARCH_PPC\",\"SCMP_ARCH_PPC64\",\"SCMP_ARCH_PPC64LE\",\"SCMP_ARCH_RISCV64\",\"SCMP_ARCH_S390\",\"SCMP_ARCH_S390X\",\"SCMP_ARCH_X32\",\"SCMP_ARCH_X86\",\"SCMP_ARCH_X86_64\"],\"knownFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"],\"supportedFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"]},\"apparmor\":{\"enabled\":true},\"selinux\":{\"enabled\":true},\"intelRdt\":{\"enabled\":true},\"mountExtensions\":{\"idmap\":{\"enabled\":true}}},\"annotations\":{\"io.github.seccomp.libseccomp.version\":\"2.5.3\",\"org.opencontainers.runc.checkpoint.enabled\":\"true\",\"org.opencontainers.runc.commit\":\"v1.2.5-0-g59923ef\",\"org.opencontainers.runc.version\":\"1.2.5\"},\"potentiallyUnsafeConfigAnnotations\":[\"bundle\",\"org.systemd.property.\",\"org.criu.config\"]}"
                }
              },
              "runc": {
                "path": "runc",
                "status": {
                  "org.opencontainers.runtime-spec.features": "{\"ociVersionMin\":\"1.0.0\",\"ociVersionMax\":\"1.2.0\",\"hooks\":[\"prestart\",\"createRuntime\",\"createContainer\",\"startContainer\",\"poststart\",\"poststop\"],\"mountOptions\":[\"async\",\"atime\",\"bind\",\"defaults\",\"dev\",\"diratime\",\"dirsync\",\"exec\",\"iversion\",\"lazytime\",\"loud\",\"mand\",\"noatime\",\"nodev\",\"nodiratime\",\"noexec\",\"noiversion\",\"nolazytime\",\"nomand\",\"norelatime\",\"nostrictatime\",\"nosuid\",\"nosymfollow\",\"private\",\"ratime\",\"rbind\",\"rdev\",\"rdiratime\",\"relatime\",\"remount\",\"rexec\",\"rnoatime\",\"rnodev\",\"rnodiratime\",\"rnoexec\",\"rnorelatime\",\"rnostrictatime\",\"rnosuid\",\"rnosymfollow\",\"ro\",\"rprivate\",\"rrelatime\",\"rro\",\"rrw\",\"rshared\",\"rslave\",\"rstrictatime\",\"rsuid\",\"rsymfollow\",\"runbindable\",\"rw\",\"shared\",\"silent\",\"slave\",\"strictatime\",\"suid\",\"symfollow\",\"sync\",\"tmpcopyup\",\"unbindable\"],\"linux\":{\"namespaces\":[\"cgroup\",\"ipc\",\"mount\",\"network\",\"pid\",\"time\",\"user\",\"uts\"],\"capabilities\":[\"CAP_CHOWN\",\"CAP_DAC_OVERRIDE\",\"CAP_DAC_READ_SEARCH\",\"CAP_FOWNER\",\"CAP_FSETID\",\"CAP_KILL\",\"CAP_SETGID\",\"CAP_SETUID\",\"CAP_SETPCAP\",\"CAP_LINUX_IMMUTABLE\",\"CAP_NET_BIND_SERVICE\",\"CAP_NET_BROADCAST\",\"CAP_NET_ADMIN\",\"CAP_NET_RAW\",\"CAP_IPC_LOCK\",\"CAP_IPC_OWNER\",\"CAP_SYS_MODULE\",\"CAP_SYS_RAWIO\",\"CAP_SYS_CHROOT\",\"CAP_SYS_PTRACE\",\"CAP_SYS_PACCT\",\"CAP_SYS_ADMIN\",\"CAP_SYS_BOOT\",\"CAP_SYS_NICE\",\"CAP_SYS_RESOURCE\",\"CAP_SYS_TIME\",\"CAP_SYS_TTY_CONFIG\",\"CAP_MKNOD\",\"CAP_LEASE\",\"CAP_AUDIT_WRITE\",\"CAP_AUDIT_CONTROL\",\"CAP_SETFCAP\",\"CAP_MAC_OVERRIDE\",\"CAP_MAC_ADMIN\",\"CAP_SYSLOG\",\"CAP_WAKE_ALARM\",\"CAP_BLOCK_SUSPEND\",\"CAP_AUDIT_READ\",\"CAP_PERFMON\",\"CAP_BPF\",\"CAP_CHECKPOINT_RESTORE\"],\"cgroup\":{\"v1\":true,\"v2\":true,\"systemd\":true,\"systemdUser\":true,\"rdma\":true},\"seccomp\":{\"enabled\":true,\"actions\":[\"SCMP_ACT_ALLOW\",\"SCMP_ACT_ERRNO\",\"SCMP_ACT_KILL\",\"SCMP_ACT_KILL_PROCESS\",\"SCMP_ACT_KILL_THREAD\",\"SCMP_ACT_LOG\",\"SCMP_ACT_NOTIFY\",\"SCMP_ACT_TRACE\",\"SCMP_ACT_TRAP\"],\"operators\":[\"SCMP_CMP_EQ\",\"SCMP_CMP_GE\",\"SCMP_CMP_GT\",\"SCMP_CMP_LE\",\"SCMP_CMP_LT\",\"SCMP_CMP_MASKED_EQ\",\"SCMP_CMP_NE\"],\"archs\":[\"SCMP_ARCH_AARCH64\",\"SCMP_ARCH_ARM\",\"SCMP_ARCH_MIPS\",\"SCMP_ARCH_MIPS64\",\"SCMP_ARCH_MIPS64N32\",\"SCMP_ARCH_MIPSEL\",\"SCMP_ARCH_MIPSEL64\",\"SCMP_ARCH_MIPSEL64N32\",\"SCMP_ARCH_PPC\",\"SCMP_ARCH_PPC64\",\"SCMP_ARCH_PPC64LE\",\"SCMP_ARCH_RISCV64\",\"SCMP_ARCH_S390\",\"SCMP_ARCH_S390X\",\"SCMP_ARCH_X32\",\"SCMP_ARCH_X86\",\"SCMP_ARCH_X86_64\"],\"knownFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"],\"supportedFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"]},\"apparmor\":{\"enabled\":true},\"selinux\":{\"enabled\":true},\"intelRdt\":{\"enabled\":true},\"mountExtensions\":{\"idmap\":{\"enabled\":true}}},\"annotations\":{\"io.github.seccomp.libseccomp.version\":\"2.5.3\",\"org.opencontainers.runc.checkpoint.enabled\":\"true\",\"org.opencontainers.runc.commit\":\"v1.2.5-0-g59923ef\",\"org.opencontainers.runc.version\":\"1.2.5\"},\"potentiallyUnsafeConfigAnnotations\":[\"bundle\",\"org.systemd.property.\",\"org.criu.config\"]}"
                }
              }
            },
            "DefaultRuntime": "runc",
            "Swarm": {
              "NodeID": "",
              "NodeAddr": "",
              "LocalNodeState": "inactive",
              "ControlAvailable": false,
              "Error": "",
              "RemoteManagers": null
            },
            "LiveRestoreEnabled": false,
            "Isolation": "",
            "InitBinary": "docker-init",
            "ContainerdCommit": {
              "ID": "05044ec0a9a75232cad458027ca83437aae3f4da",
              "Expected": "05044ec0a9a75232cad458027ca83437aae3f4da"
            },
            "RuncCommit": {
              "ID": "v1.2.5-0-g59923ef",
              "Expected": "v1.2.5-0-g59923ef"
            },
            "InitCommit": {
              "ID": "de40ad0",
              "Expected": "de40ad0"
            },
            "SecurityOptions": [
              "name=apparmor",
              "name=seccomp,profile=builtin",
              "name=cgroupns"
            ],
            "CDISpecDirs": [
              "/etc/cdi",
              "/var/run/cdi"
            ],
            "Warnings": null
          },
          "Version": {
            "Platform": {
              "Name": "Docker Engine - Community"
            },
            "Components": [
              {
                "Name": "Engine",
                "Version": "28.3.3",
                "Details": {
                  "ApiVersion": "1.51",
                  "Arch": "amd64",
                  "BuildTime": "2025-07-25T11:34:04.000000000+00:00",
                  "Experimental": "false",
                  "GitCommit": "bea959c",
                  "GoVersion": "go1.24.5",
                  "KernelVersion": "5.15.0-153-generic",
                  "MinAPIVersion": "1.24",
                  "Os": "linux"
                }
              },
              {
                "Name": "containerd",
                "Version": "1.7.27",
                "Details": {
                  "GitCommit": "05044ec0a9a75232cad458027ca83437aae3f4da"
                }
              },
              {
                "Name": "runc",
                "Version": "1.2.5",
                "Details": {
                  "GitCommit": "v1.2.5-0-g59923ef"
                }
              },
              {
                "Name": "docker-init",
                "Version": "0.19.0",
                "Details": {
                  "GitCommit": "de40ad0"
                }
              }
            ],
            "Version": "28.3.3",
            "ApiVersion": "1.51",
            "MinAPIVersion": "1.24",
            "GitCommit": "bea959c",
            "GoVersion": "go1.24.5",
            "Os": "linux",
            "Arch": "amd64",
            "KernelVersion": "5.15.0-153-generic",
            "BuildTime": "2025-07-25T11:34:04.000000000+00:00"
          }
        },
        "NodeCount": 0,
        "GpuUseAll": false,
        "GpuUseList": []
      },
      "Kubernetes": null
    },
    {
      "EndpointId": 3,
      "Docker": {
        "Time": 1757127250,
        "DockerVersion": "28.3.3",
        "Swarm": false,
        "TotalCPU": 28,
        "TotalMemory": 33566289920,
        "ContainerCount": 18,
        "RunningContainerCount": 11,
        "StoppedContainerCount": 7,
        "HealthyContainerCount": 0,
        "UnhealthyContainerCount": 0,
        "VolumeCount": 41,
        "ImageCount": 30,
        "ServiceCount": 0,
        "StackCount": 12,
        "DockerSnapshotRaw": {
          "Containers": [
            {
              "Id": "f6e5f098bc0e625e2a8c90eb460d0531dc504b257a13c41114a33eb785e07f56",
              "Names": [
                "/jackett"
              ],
              "Image": "linuxserver/jackett",
              "ImageID": "sha256:18ace5c5dd53928c3f91d1d58a78dc7756eeea9920d40bd10c80bd7624bf4aa1",
              "Command": "/init",
              "Created": 1750273963,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 9117,
                  "PublicPort": 9117,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 9117,
                  "PublicPort": 9117,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "build_version": "Linuxserver.io version:- v0.22.2026-ls63 Build-date:- 2025-06-18T06:56:33+00:00",
                "com.docker.compose.config-hash": "f043fb0db8b786a6e07c4a71022bba393a210aca9990b10ff690b2260ba27a64",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "jorts",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/jorts",
                "com.docker.compose.service": "jackett",
                "com.docker.compose.version": "1.29.2",
                "maintainer": "thelamer",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-06-18T06:56:33+00:00",
                "org.opencontainers.image.description": "[Jackett](https://github.com/Jackett/Jackett) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping \u0026 translation logic - removing the burden from other apps.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-jackett",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "9d97c21338edbeaafc76afea4dc6b1ba0544e0bd",
                "org.opencontainers.image.revision": "9d97c21338edbeaafc76afea4dc6b1ba0544e0bd",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-jackett",
                "org.opencontainers.image.title": "Jackett",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-jackett/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "v0.22.2026-ls63"
              },
              "State": "running",
              "Status": "Up 2 weeks",
              "HostConfig": {
                "NetworkMode": "jorts_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "jorts_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "22:3b:50:44:83:22",
                    "NetworkID": "3d880fdd8b9d5f01b8b1bee051e119f200f33877e4265eb5d1632f04689cf2a6",
                    "EndpointID": "0d1d820cff3bb610ae45d12db9e4c81dc60de0a4fe9403682cc925910e93c5f1",
                    "Gateway": "172.23.0.1",
                    "IPAddress": "172.23.0.4",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/jorts-overhead/jackett/config",
                  "Destination": "/config",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/home/csw/jorts-overhead/jackett/downloads",
                  "Destination": "/downloads",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "29ebe4c51720a092120ab0fea35e6b2eba1bf60c6a43cb9f62205f6b110ca2f6",
              "Names": [
                "/transmission-openvpn"
              ],
              "Image": "haugene/transmission-openvpn:latest",
              "ImageID": "sha256:a78d053fdb3844260d5acfd681223b4b86bc9db75fc7a5ef77416f894fb0ce48",
              "Command": "dumb-init /etc/openvpn/start.sh",
              "Created": 1750273963,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 8888,
                  "PublicPort": 8888,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 8888,
                  "PublicPort": 8888,
                  "Type": "tcp"
                },
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 9091,
                  "PublicPort": 9092,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 9091,
                  "PublicPort": 9092,
                  "Type": "tcp"
                },
                {
                  "PrivatePort": 8118,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "autoheal": "true",
                "com.docker.compose.config-hash": "45eed218a210217ae38d8e8ab552bdb39030c0b8747e060830da09a52795e9e5",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "jorts",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/jorts",
                "com.docker.compose.service": "transmission",
                "com.docker.compose.version": "1.29.2",
                "org.opencontainers.image.created": "2025-05-28T18:23:31.817Z",
                "org.opencontainers.image.description": "Docker container running Transmission torrent client with WebUI over an OpenVPN tunnel",
                "org.opencontainers.image.licenses": "GPL-3.0",
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.revision": "fd609f2ace1970858d3c32fcbd6c271b3d274d39",
                "org.opencontainers.image.source": "https://github.com/haugene/docker-transmission-openvpn",
                "org.opencontainers.image.title": "docker-transmission-openvpn",
                "org.opencontainers.image.url": "https://github.com/haugene/docker-transmission-openvpn",
                "org.opencontainers.image.version": "5.3.2"
              },
              "State": "running",
              "Status": "Up 43 hours (healthy)",
              "HostConfig": {
                "NetworkMode": "jorts_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "jorts_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "4e:dc:80:06:3d:d0",
                    "NetworkID": "3d880fdd8b9d5f01b8b1bee051e119f200f33877e4265eb5d1632f04689cf2a6",
                    "EndpointID": "09281fde110d3d4ee84c9685f8c1ffac3235600af8f04c5e926b2e41bfddd198",
                    "Gateway": "172.23.0.1",
                    "IPAddress": "172.23.0.3",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "f3b45a6727fecdbfb822f78d805bc13a985e31bca23ba1677fec5d39274e18b5",
                  "Source": "",
                  "Destination": "/config",
                  "Driver": "local",
                  "Mode": "",
                  "RW": true,
                  "Propagation": ""
                },
                {
                  "Type": "bind",
                  "Source": "/home/csw/jorts-overhead/transmission",
                  "Destination": "/data",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/etc/localtime",
                  "Destination": "/etc/localtime",
                  "Mode": "ro",
                  "RW": false,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "c570bc9505115f6d724d1f9e27568aaf0f0158bd165bba41cfb2b86f13bce723",
              "Names": [
                "/radarr"
              ],
              "Image": "linuxserver/radarr",
              "ImageID": "sha256:3529d5ea7df4a76352258ed45269525bfb9fe338cfb74c678e9f8d57dd312407",
              "Command": "/init",
              "Created": 1750273963,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 7878,
                  "PublicPort": 7878,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 7878,
                  "PublicPort": 7878,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "build_version": "Linuxserver.io version:- 5.26.2.10099-ls276 Build-date:- 2025-06-15T04:52:48+00:00",
                "com.docker.compose.config-hash": "18ff95e61a0412d0f7c2d72db995b7fb19aedbb9fd3714b2406e9bc2df74a0e4",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "jorts",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/jorts",
                "com.docker.compose.service": "radarr",
                "com.docker.compose.version": "1.29.2",
                "maintainer": "Roxedus,thespad",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-06-15T04:52:48+00:00",
                "org.opencontainers.image.description": "[Radarr](https://github.com/Radarr/Radarr) - A fork of Sonarr to work with movies à la Couchpotato.  ",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-radarr",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                "org.opencontainers.image.revision": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-radarr",
                "org.opencontainers.image.title": "Radarr",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-radarr/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "5.26.2.10099-ls276"
              },
              "State": "running",
              "Status": "Up 2 weeks",
              "HostConfig": {
                "NetworkMode": "jorts_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "jorts_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "9a:bf:27:68:14:d9",
                    "NetworkID": "3d880fdd8b9d5f01b8b1bee051e119f200f33877e4265eb5d1632f04689cf2a6",
                    "EndpointID": "a36d23dbe504b6c5ec3bec4dfb24f8bb6504e82e4d2863e27b563ffc91d170b4",
                    "Gateway": "172.23.0.1",
                    "IPAddress": "172.23.0.5",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/jorts-overhead/transmission/completed",
                  "Destination": "/data/completed",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/forest/Media/Movies",
                  "Destination": "/movies",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/home/csw/jorts-overhead/radarr-config",
                  "Destination": "/config",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "0e75d23455cedd1c7ce9358d2c18531618c9914213436d705e70cd8f320a877c",
              "Names": [
                "/sonarr"
              ],
              "Image": "linuxserver/sonarr",
              "ImageID": "sha256:83d012526cd89eef0be5e4511384cda624e231102e0a7fdc8434bcfe88d67fe3",
              "Command": "/init",
              "Created": 1750273963,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 8989,
                  "PublicPort": 8989,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 8989,
                  "PublicPort": 8989,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "build_version": "Linuxserver.io version:- 4.0.14.2939-ls284 Build-date:- 2025-06-13T23:37:58+00:00",
                "com.docker.compose.config-hash": "a272127f184804cbdf16979569ccd2feba978c1057ab8a2ecc29fbffe278660a",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "jorts",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/jorts",
                "com.docker.compose.service": "sonarr",
                "com.docker.compose.version": "1.29.2",
                "maintainer": "thespad",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-06-13T23:37:58+00:00",
                "org.opencontainers.image.description": "[Sonarr](https://sonarr.tv/) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.  ",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-sonarr",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "b56ca9c99d836e19529fbba29d31dd65f43eb30d",
                "org.opencontainers.image.revision": "b56ca9c99d836e19529fbba29d31dd65f43eb30d",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-sonarr",
                "org.opencontainers.image.title": "Sonarr",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-sonarr/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "4.0.14.2939-ls284"
              },
              "State": "running",
              "Status": "Up 2 weeks",
              "HostConfig": {
                "NetworkMode": "jorts_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "jorts_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "7a:7e:c8:62:2b:2b",
                    "NetworkID": "3d880fdd8b9d5f01b8b1bee051e119f200f33877e4265eb5d1632f04689cf2a6",
                    "EndpointID": "2b2af798420e2bbc7f4f0836439725c4629b989f511cdfddbaaf93759677c9b1",
                    "Gateway": "172.23.0.1",
                    "IPAddress": "172.23.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/forest/Media/TV",
                  "Destination": "/tv",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/home/csw/jorts-overhead/sonarr/config",
                  "Destination": "/config",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/home/csw/jorts-overhead/transmission/completed",
                  "Destination": "/data/completed",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "8b459311b333dc9781c14de4740468f43b71ff85fa4636bf669935a0ebe58be4",
              "Names": [
                "/mealie"
              ],
              "Image": "ghcr.io/mealie-recipes/mealie:latest",
              "ImageID": "sha256:48e4bc66d858856d289ac34bb303f8639d91b97e952549a878302cdab878e52a",
              "Command": "/app/run.sh",
              "Created": 1733945112,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 9000,
                  "PublicPort": 9000,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 9000,
                  "PublicPort": 9000,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "5453c8cb6c4efa7ca2b2c5efc5330801788e7ea73c2189cf8a346d713a6742a0",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "mealie",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/mealie",
                "com.docker.compose.service": "mealie",
                "com.docker.compose.version": "1.29.2",
                "org.opencontainers.image.source": "https://github.com/mealie-recipes/mealie"
              },
              "State": "running",
              "Status": "Up 2 weeks (healthy)",
              "HostConfig": {
                "NetworkMode": "mealie_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "mealie_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "0e:9d:91:11:1b:1d",
                    "NetworkID": "ea6d872a06be289c3c9171ee08ab4153aef7e05d88166cd2f0dc2cd25d1781fd",
                    "EndpointID": "05698a06f8d617a8b1a99f8746ac0436a746b4e7ea3e93856e104ecb7b7d7779",
                    "Gateway": "172.25.0.1",
                    "IPAddress": "172.25.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "mealie_mealie-data",
                  "Source": "/var/lib/docker/volumes/mealie_mealie-data/_data",
                  "Destination": "/app/data",
                  "Driver": "local",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": ""
                }
              ]
            },
            {
              "Id": "196c14a5c4bb42a33c97a715e41371abe5efa5b4077eb7db2886c5e122eb355f",
              "Names": [
                "/tubesync"
              ],
              "Image": "ghcr.io/meeb/tubesync:latest",
              "ImageID": "sha256:959f120d9509881d9c0b642a0ad16569838e157d4edc16c49063a8028723079a",
              "Command": "/init",
              "Created": 1727585014,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 4848,
                  "PublicPort": 4848,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 4848,
                  "PublicPort": 4848,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "b39ecea5a375315ac73ecec90eb7656be2589eefd36e3faff38c5f427798248a",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.depends_on": "",
                "com.docker.compose.image": "sha256:959f120d9509881d9c0b642a0ad16569838e157d4edc16c49063a8028723079a",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "tubesync",
                "com.docker.compose.project.config_files": "/data/compose/8/docker-compose.yml",
                "com.docker.compose.project.environment_file": "/data/compose/8/stack.env",
                "com.docker.compose.project.working_dir": "/data/compose/8",
                "com.docker.compose.service": "tubesync",
                "com.docker.compose.version": "2.29.2"
              },
              "State": "running",
              "Status": "Up 2 weeks (healthy)",
              "HostConfig": {
                "NetworkMode": "tubesync_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "tubesync_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "3e:d8:97:8d:df:aa",
                    "NetworkID": "f620d8e6f3953c0c725b47730405b03498c5592a7f20836a6b6aa00119c63887",
                    "EndpointID": "f7431d581e7ddeefa0f0b98e44add13854eaf24f079f4c43dbbf3d05e4f1102b",
                    "Gateway": "172.19.0.1",
                    "IPAddress": "172.19.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "tubesync_config",
                  "Source": "/var/lib/docker/volumes/tubesync_config/_data",
                  "Destination": "/config",
                  "Driver": "local",
                  "Mode": "z",
                  "RW": true,
                  "Propagation": ""
                },
                {
                  "Type": "volume",
                  "Name": "tubesync_downloads",
                  "Source": "/var/lib/docker/volumes/tubesync_downloads/_data",
                  "Destination": "/downloads",
                  "Driver": "local",
                  "Mode": "z",
                  "RW": true,
                  "Propagation": ""
                }
              ]
            },
            {
              "Id": "53d4f805ef3b9c75d899a1028d7ddce441312698380f1ae77576a77c71471551",
              "Names": [
                "/portainer"
              ],
              "Image": "portainer/agent:2.21.2",
              "ImageID": "sha256:b93bc8e296db52fe3f5940c6bd1638b58003edf480b7a1444cbc3290560b7079",
              "Command": "./agent",
              "Created": 1727466657,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 9001,
                  "PublicPort": 9001,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 9001,
                  "PublicPort": 9001,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "bf28beaba2eade810a29d496aabe50762a4735de999e52fe70ad819783e026ff",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "portainer-agent",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/portainer-agent",
                "com.docker.compose.service": "portainer",
                "com.docker.compose.version": "1.29.2",
                "io.portainer.agent": "true"
              },
              "State": "running",
              "Status": "Up 2 weeks",
              "HostConfig": {
                "NetworkMode": "portainer-agent_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "portainer-agent_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "2e:4a:e1:18:ff:85",
                    "NetworkID": "c49660d488a15b89fc1360d727d78888b568eb8911070f5096bfdc3c1f442a58",
                    "EndpointID": "9ddc9bda02b991e72c9911708c8965171a5d39f0ad58f6b8c507827b6ef6990d",
                    "Gateway": "172.31.0.1",
                    "IPAddress": "172.31.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/var/lib/docker/volumes",
                  "Destination": "/var/lib/docker/volumes",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rslave"
                },
                {
                  "Type": "bind",
                  "Source": "/var/run/docker.sock",
                  "Destination": "/var/run/docker.sock",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/",
                  "Destination": "/host",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rslave"
                }
              ]
            },
            {
              "Id": "3116f7cf7eaff41332983a77fb7c2558a425d1b8efa59b5af7f1a53f75ec1bf4",
              "Names": [
                "/tautulli"
              ],
              "Image": "tautulli/tautulli",
              "ImageID": "sha256:51502185381b1904d42216216bb04ed49eb19ecb1f8a894ee4d80d1d3ca24ca5",
              "Command": "./start.sh python Tautulli.py --datadir /config",
              "Created": 1726794662,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 8181,
                  "PublicPort": 8181,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 8181,
                  "PublicPort": 8181,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "8f7394541d376e6ad6a4e6fecc2ba025623d0059bc75a7108104594ef9b9ad18",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "tautulli",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/tautulli",
                "com.docker.compose.service": "tautulli",
                "com.docker.compose.version": "1.29.2",
                "maintainer": "Tautulli"
              },
              "State": "running",
              "Status": "Up 2 weeks (healthy)",
              "HostConfig": {
                "NetworkMode": "tautulli_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "tautulli_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "2e:ff:0d:33:b5:c0",
                    "NetworkID": "5dfc6a59e41b55bd2eb12792dbe6d2a9258cda2432ebf0667d807736513d40a0",
                    "EndpointID": "9a2e6051707c62bc32b8be5fb592d18afea0f400a9645e6cd0a049908c98404d",
                    "Gateway": "172.30.0.1",
                    "IPAddress": "172.30.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/tautulli",
                  "Destination": "/config",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                },
                {
                  "Type": "bind",
                  "Source": "/var/lib/plexmediaserver/Library/Application\\ Support/Plex\\ Media\\ Server/Logs",
                  "Destination": "/plex_logs",
                  "Mode": "ro",
                  "RW": false,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "8932ca45907bfdfdec5ae9d25ede2645f1fefac8105e446ef0ca6a1f9e11d8be",
              "Names": [
                "/swag"
              ],
              "Image": "ghcr.io/linuxserver/swag",
              "ImageID": "sha256:0daaaa2d6f545cf763a27760486243ae46b3eb312ee93b469d0b6b82c5cc81ea",
              "Command": "/init",
              "Created": 1725426450,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 443,
                  "PublicPort": 443,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 443,
                  "PublicPort": 443,
                  "Type": "tcp"
                },
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 80,
                  "PublicPort": 80,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 80,
                  "PublicPort": 80,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "build_version": "Linuxserver.io version:- 2.11.0-ls322 Build-date:- 2024-09-02T20:57:08+00:00",
                "com.docker.compose.config-hash": "bfde5f628f352457c7a278c7884d10dec9ae70301736dc7ad35f193588c0b0e3",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "swag",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/swag",
                "com.docker.compose.service": "swag",
                "com.docker.compose.version": "1.29.2",
                "maintainer": "nemchik",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2024-09-02T20:57:08+00:00",
                "org.opencontainers.image.description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-swag",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "5027f6f7b302e0e8e53353940211a23aac62f116",
                "org.opencontainers.image.revision": "5027f6f7b302e0e8e53353940211a23aac62f116",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-swag",
                "org.opencontainers.image.title": "Swag",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-swag/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "2.11.0-ls322"
              },
              "State": "running",
              "Status": "Up 2 weeks",
              "HostConfig": {
                "NetworkMode": "swag_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "swag_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "46:3c:5d:7d:bd:d0",
                    "NetworkID": "82d8928852094089aed7141fdd1612b1c7a54842cfaef9c402ecf94d4868eb98",
                    "EndpointID": "fd948a27be9aa9a32666cc259465acf299e39920a371f4c977211cd8d25abc19",
                    "Gateway": "192.168.80.1",
                    "IPAddress": "192.168.80.2",
                    "IPPrefixLen": 20,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/etc/config/swag",
                  "Destination": "/config",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "76d1b903b3c9646455365647ed5e64d0a68fa596b9bc790bd5d3b926246ccd39",
              "Names": [
                "/ddns-updater"
              ],
              "Image": "qmcgaw/ddns-updater",
              "ImageID": "sha256:c2ef7ac2d40dd8818a38bf601b4cb54a1b21bc00dabe9e1aa4a239fcc59c3c7e",
              "Command": "/updater/app",
              "Created": 1715623835,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 8000,
                  "PublicPort": 8000,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 8000,
                  "PublicPort": 8000,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "39898953195975c1a47613d97dd60ddbe32c53398ede94925138e64684598810",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "ddns",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/ddns",
                "com.docker.compose.service": "ddns-updater",
                "com.docker.compose.version": "1.29.2",
                "org.opencontainers.image.authors": "quentin.mcgaw@gmail.com",
                "org.opencontainers.image.created": "2024-05-06T11:16:06.246Z",
                "org.opencontainers.image.description": "Container to update DNS records periodically with WebUI for many DNS providers",
                "org.opencontainers.image.documentation": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.licenses": "MIT",
                "org.opencontainers.image.revision": "542e89536c524cdb2215a48384af7ef6fad2c443",
                "org.opencontainers.image.source": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.title": "ddns-updater",
                "org.opencontainers.image.url": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.version": "latest"
              },
              "State": "running",
              "Status": "Up 2 weeks (healthy)",
              "HostConfig": {
                "NetworkMode": "bridge"
              },
              "NetworkSettings": {
                "Networks": {
                  "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "e2:35:5e:d0:c0:94",
                    "NetworkID": "8082ababc140befcab766299c6c1b6b0afb05d9317676d7163ac69f32499b4e6",
                    "EndpointID": "ee91eb3a3155bf41bbc7f5ec6c9f115cc569239195ab283dbc386cf543332d50",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/docker/ddns/data",
                  "Destination": "/updater/data",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "2878b7991b1d41fe606ce4b7d0fb7b8aa8f266fce7e746f3e679f36731b43b47",
              "Names": [
                "/loving_yonath"
              ],
              "Image": "nginx:alpine",
              "ImageID": "sha256:eaf194063ee287f60137b88326ed4d3a14ec62f20de06df6ff7f8b5ed9f1d08c",
              "Command": "/docker-entrypoint.sh nginx -g 'daemon off;'",
              "Created": 1693330370,
              "Ports": [],
              "Labels": {
                "maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
              },
              "State": "exited",
              "Status": "Exited (0) 2 years ago",
              "HostConfig": {
                "NetworkMode": "bridge"
              },
              "NetworkSettings": {
                "Networks": {
                  "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "4acd790ca6d1cbecba58713e70944592900d3f06c1191f082fa9a38a1847af80",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": []
            },
            {
              "Id": "342b8401cee2f3f7fe06e29e39f3124da82a86b2f8b098bdef44163cc36eb257",
              "Names": [
                "/monero"
              ],
              "Image": "monero-0.18.1.0",
              "ImageID": "sha256:4566e71789eb5c35b5c6bf03860824829811b748914489269de9c4a83be26d9f",
              "Command": "./monerod --non-interactive --restricted-rpc --rpc-bind-ip=0.0.0.0 --confirm-external-bind --enable-dns-blocklist --out-peers=16",
              "Created": 1685671867,
              "Ports": [
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 18080,
                  "PublicPort": 18080,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 18080,
                  "PublicPort": 18080,
                  "Type": "tcp"
                },
                {
                  "IP": "0.0.0.0",
                  "PrivatePort": 18081,
                  "PublicPort": 18081,
                  "Type": "tcp"
                },
                {
                  "IP": "::",
                  "PrivatePort": 18081,
                  "PublicPort": 18081,
                  "Type": "tcp"
                }
              ],
              "Labels": {
                "com.docker.compose.config-hash": "fcdd55ec2bfac5aa75baa592a0bfe6e885290a0c6163e6b9303c680f5c29a141",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "monero",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/monero",
                "com.docker.compose.service": "monero",
                "com.docker.compose.version": "1.29.2"
              },
              "State": "running",
              "Status": "Up 2 weeks",
              "HostConfig": {
                "NetworkMode": "monero_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "monero_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "36:d3:75:d0:80:7e",
                    "NetworkID": "717f17d6617b762bed3272268ba6b0ea78c87513099451923dcc177afaf1f1b0",
                    "EndpointID": "9711cf4a72329cf1ddf3d53964d6d57482a3b89c4d662c055f90b13517b966b2",
                    "Gateway": "172.22.0.1",
                    "IPAddress": "172.22.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/data/monero",
                  "Destination": "/home/monero/.bitmonero",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "724cd50466a900f3c4d48322cd85425f036f726cd629bdc18809f934c0f8e2ae",
              "Names": [
                "/ddclient"
              ],
              "Image": "lscr.io/linuxserver/ddclient",
              "ImageID": "sha256:c06f6677e83d3bf7992ca3b73a4a4323707dd18dd3f49fc738f3037f2b214502",
              "Command": "/init",
              "Created": 1643510474,
              "Ports": [],
              "Labels": {
                "build_version": "Linuxserver.io version:- v3.9.1-ls77 Build-date:- 2022-01-25T04:27:56+01:00",
                "com.docker.compose.config-hash": "9561682aabea3655c0008c02f53cd94a2ebad971df1651090590cefb81376530",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "ddclient",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/ddclient",
                "com.docker.compose.service": "ddclient",
                "com.docker.compose.version": "1.25.0",
                "maintainer": "saarg",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2022-01-25T04:27:56+01:00",
                "org.opencontainers.image.description": "[Ddclient](https://github.com/ddclient/ddclient) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-ddclient",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "84fdece6a272df5dc8baa96b7d08d9091611ddd6",
                "org.opencontainers.image.revision": "84fdece6a272df5dc8baa96b7d08d9091611ddd6",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-ddclient",
                "org.opencontainers.image.title": "Ddclient",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-ddclient/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "v3.9.1-ls77"
              },
              "State": "exited",
              "Status": "Exited (0) 3 years ago",
              "HostConfig": {
                "NetworkMode": "ddclient_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "ddclient_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "207d6417e0b92c08deed2a56f6fc00c76675765518ec7082a4158d537fffe053",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/data/ddclient",
                  "Destination": "/config",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "a7eb5f518ba36a69b3885553ecb307c6d1b5caff80dc937952f4e5a8587972ae",
              "Names": [
                "/co-voter-db_api_1"
              ],
              "Image": "co-voter-db_api",
              "ImageID": "sha256:de86e77bf2d55ad2506d647891bcf2ec266bb2f87ef1dadbea6c4c11fb3ae364",
              "Command": "python app.py",
              "Created": 1630010512,
              "Ports": [],
              "Labels": {
                "com.docker.compose.config-hash": "fced6efc94f7eaa580e921658b0a2d7d26e16582236ec941ed9bccdf9acb2572",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "co-voter-db",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/repos/co-voter-db",
                "com.docker.compose.service": "api",
                "com.docker.compose.version": "1.25.0",
                "maintainer": "Shaun.Garwood@gmail.com"
              },
              "State": "exited",
              "Status": "Exited (137) 3 years ago",
              "HostConfig": {
                "NetworkMode": "co-voter-db_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "co-voter-db_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "a15e6b029402ad49603d32930adfc1dc4d73f0da84c1ae1fc2140f7a45e3b6ec",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": []
            },
            {
              "Id": "1c666a47a26d017876a9db46841caef5ffef8b609168a50290ac135473757a0b",
              "Names": [
                "/nodered_node-red_1"
              ],
              "Image": "nodered/node-red:latest",
              "ImageID": "sha256:04fa5935c931bca42e200c9c72142272d829cfe7b8c90c05746c61e7d99a5679",
              "Command": "npm --no-update-notifier --no-fund start --cache /data/.npm -- --userDir /data",
              "Created": 1627356375,
              "Ports": [],
              "Labels": {
                "authors": "Dave Conway-Jones, Nick O'Leary, James Thomas, Raymond Mouthaan",
                "com.docker.compose.config-hash": "c8941f3d2bec311f0aa33778569ca6eb8bc9700ffc70321a22f3575beea192f9",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "nodered",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/nodered",
                "com.docker.compose.service": "node-red",
                "com.docker.compose.version": "1.25.0",
                "org.label-schema.arch": "",
                "org.label-schema.build-date": "2021-07-23T13:43:59Z",
                "org.label-schema.description": "Low-code programming for event-driven applications.",
                "org.label-schema.docker.dockerfile": ".docker/Dockerfile.alpine",
                "org.label-schema.license": "Apache-2.0",
                "org.label-schema.name": "Node-RED",
                "org.label-schema.url": "https://nodered.org",
                "org.label-schema.vcs-ref": "",
                "org.label-schema.vcs-type": "Git",
                "org.label-schema.vcs-url": "https://github.com/node-red/node-red-docker",
                "org.label-schema.version": "2.0.3"
              },
              "State": "exited",
              "Status": "Exited (0) 4 years ago",
              "HostConfig": {
                "NetworkMode": "nodered_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "nodered_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "f2383f71c5f560ccc56767dc848cb60b966f33042e8cb2edb0f4d4c12d6c49c2",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/data/node-red-data",
                  "Destination": "/data",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "70876bbcc1235d8502b28461fb215bf1d770bb5a15c87a0f8f7094ec34e7dcb7",
              "Names": [
                "/n8nio_n8n_1"
              ],
              "Image": "n8nio/n8n",
              "ImageID": "sha256:20b15d294804436bba0b6c4a6b4d00dd01bf01ed53c615541ce2090de6f6a70a",
              "Command": "tini -- /docker-entrypoint.sh n8n start --tunnel",
              "Created": 1622950437,
              "Ports": [],
              "Labels": {
                "com.docker.compose.config-hash": "b65020ab67f6760fc5533c6a5b9b51362aad2624f3bca7670827934c1e2485ca",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "n8nio",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/docker/n8n.io",
                "com.docker.compose.service": "n8n",
                "com.docker.compose.version": "1.25.0"
              },
              "State": "exited",
              "Status": "Exited (0) 4 years ago",
              "HostConfig": {
                "NetworkMode": "n8nio_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "n8nio_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "e615f6d6fc85eebe300ed56bfe9ed6885c39eff435b4258652ac568092a37ee4",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "bind",
                  "Source": "/home/csw/data/n8n",
                  "Destination": "/home/node/.n8n",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "e9ccb04859941fd1c8936b7d80bb5b9e69011eee440b543690e4cc61a9b7e687",
              "Names": [
                "/co-voter-db_mongodb_1"
              ],
              "Image": "mongo",
              "ImageID": "sha256:07630e791de3ceb87d39543799438e118753246d19dcfd6529bd4d27ff1b83bd",
              "Command": "docker-entrypoint.sh mongod",
              "Created": 1621100209,
              "Ports": [],
              "Labels": {
                "com.docker.compose.config-hash": "e6879cbf4d7037f463bbb202fee0bec7bd1c26d9884f16c3cf72f6dd56477265",
                "com.docker.compose.container-number": "1",
                "com.docker.compose.oneoff": "False",
                "com.docker.compose.project": "co-voter-db",
                "com.docker.compose.project.config_files": "docker-compose.yml",
                "com.docker.compose.project.working_dir": "/home/csw/repos/co-voter-db",
                "com.docker.compose.service": "mongodb",
                "com.docker.compose.version": "1.25.0"
              },
              "State": "exited",
              "Status": "Exited (0) 3 years ago",
              "HostConfig": {
                "NetworkMode": "co-voter-db_default"
              },
              "NetworkSettings": {
                "Networks": {
                  "co-voter-db_default": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "a15e6b029402ad49603d32930adfc1dc4d73f0da84c1ae1fc2140f7a45e3b6ec",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": [
                {
                  "Type": "volume",
                  "Name": "79cfa5075e3ea69ea40e1247a24a85473069526e21f0d5f6293169b7521f2003",
                  "Source": "",
                  "Destination": "/data/configdb",
                  "Driver": "local",
                  "Mode": "",
                  "RW": true,
                  "Propagation": ""
                },
                {
                  "Type": "bind",
                  "Source": "/home/csw/data/co-voter-db",
                  "Destination": "/data/db",
                  "Mode": "rw",
                  "RW": true,
                  "Propagation": "rprivate"
                }
              ]
            },
            {
              "Id": "8e9093b3c84a9469d2017f7b6cb00ed24f980bd176f4f2acc826f788ffeaee21",
              "Names": [
                "/relaxed_lamport"
              ],
              "Image": "hello-world",
              "ImageID": "sha256:d1165f2212346b2bab48cb01c1e39ee8ad1be46b87873d9ca7a4e434980a7726",
              "Command": "/hello",
              "Created": 1615692050,
              "Ports": [],
              "Labels": {},
              "State": "exited",
              "Status": "Exited (0) 4 years ago",
              "HostConfig": {
                "NetworkMode": "bridge"
              },
              "NetworkSettings": {
                "Networks": {
                  "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "MacAddress": "",
                    "NetworkID": "e498ff65bdedf16a23d91662ff7f8ddfafcf9b904afca9e15f8ee66743f9b08a",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "DriverOpts": null,
                    "DNSNames": null
                  }
                }
              },
              "Mounts": []
            }
          ],
          "Volumes": {
            "Volumes": [
              {
                "CreatedAt": "2024-01-04T01:55:25Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/29d4f308abea03acfa652eef0a231bdbfdc8bcbdd7ddbc94a56dcfb112a56032/_data",
                "Name": "29d4f308abea03acfa652eef0a231bdbfdc8bcbdd7ddbc94a56dcfb112a56032",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-10-31T21:39:15Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/2e37c363a12cde510466ef09871c806832d5ddc166e955b9e412067ae8465374/_data",
                "Name": "2e37c363a12cde510466ef09871c806832d5ddc166e955b9e412067ae8465374",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-08-30T23:12:58Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/a71976c7b7fed36f390ea073309034ff7fe2d1ac25451d10200297d1cf303892/_data",
                "Name": "a71976c7b7fed36f390ea073309034ff7fe2d1ac25451d10200297d1cf303892",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2025-03-11T17:20:17Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/ef63c308e0be7129d6b2fdc65d9d7c3d5057aa3617f481ab9afa4b896ba15bff/_data",
                "Name": "ef63c308e0be7129d6b2fdc65d9d7c3d5057aa3617f481ab9afa4b896ba15bff",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-29T04:43:34Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "tubesync",
                  "com.docker.compose.version": "2.29.2",
                  "com.docker.compose.volume": "downloads"
                },
                "Mountpoint": "/var/lib/docker/volumes/tubesync_downloads/_data",
                "Name": "tubesync_downloads",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2025-03-11T17:25:11Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/5f529ea116df968918489b2d573dc8541fdf84333102344d1aacbe50541bc1d7/_data",
                "Name": "5f529ea116df968918489b2d573dc8541fdf84333102344d1aacbe50541bc1d7",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-29T02:41:58Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "nginx-letsencrypt",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "certs"
                },
                "Mountpoint": "/var/lib/docker/volumes/nginx-letsencrypt_certs/_data",
                "Name": "nginx-letsencrypt_certs",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-29T02:41:58Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "nginx-letsencrypt",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "conf"
                },
                "Mountpoint": "/var/lib/docker/volumes/nginx-letsencrypt_conf/_data",
                "Name": "nginx-letsencrypt_conf",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2025-02-25T15:52:04Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/7bdc3fda74bc66c06c91450101fc5446c5979383784f3c8baf44d022f9ffb2d5/_data",
                "Name": "7bdc3fda74bc66c06c91450101fc5446c5979383784f3c8baf44d022f9ffb2d5",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-02-13T02:29:51Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/8f5a9c18d04b1be20bfa41b3e3ca82774f67c72dc8e6b24c33a018b8b2885d0c/_data",
                "Name": "8f5a9c18d04b1be20bfa41b3e3ca82774f67c72dc8e6b24c33a018b8b2885d0c",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-02-06T05:14:20Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/29ee507e01e752242d86b754fb4b69f83b65f35a600b2463595b85cd82b1ac99/_data",
                "Name": "29ee507e01e752242d86b754fb4b69f83b65f35a600b2463595b85cd82b1ac99",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-03-02T02:56:54Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/4a16e92cbc19fd36f40a3bacef82a3890a5cfecad34892b1543ee93c4b417e3c/_data",
                "Name": "4a16e92cbc19fd36f40a3bacef82a3890a5cfecad34892b1543ee93c4b417e3c",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-08T04:04:44Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/nginx_config/_data",
                "Name": "nginx_config",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-08T04:08:30Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/staticfiles/_data",
                "Name": "staticfiles",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-24T18:15:52Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "tandoor",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "html"
                },
                "Mountpoint": "/var/lib/docker/volumes/tandoor_html/_data",
                "Name": "tandoor_html",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-24T18:15:52Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "tandoor",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "vhost"
                },
                "Mountpoint": "/var/lib/docker/volumes/tandoor_vhost/_data",
                "Name": "tandoor_vhost",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2025-03-11T11:58:47Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/1a6811eb4c7421518394997ca52827c8d9b165f21ee0470c48e399a5317489bf/_data",
                "Name": "1a6811eb4c7421518394997ca52827c8d9b165f21ee0470c48e399a5317489bf",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-02-13T02:27:54Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/96457cafae6dbd74c068db9349f1a350b6707b0ea78880438bf320cabe4240fc/_data",
                "Name": "96457cafae6dbd74c068db9349f1a350b6707b0ea78880438bf320cabe4240fc",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-29T02:41:58Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "nginx-letsencrypt",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "vhost"
                },
                "Mountpoint": "/var/lib/docker/volumes/nginx-letsencrypt_vhost/_data",
                "Name": "nginx-letsencrypt_vhost",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-24T18:15:52Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "tandoor",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "acme"
                },
                "Mountpoint": "/var/lib/docker/volumes/tandoor_acme/_data",
                "Name": "tandoor_acme",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-07-07T22:52:31Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "tandoor",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "staticfiles"
                },
                "Mountpoint": "/var/lib/docker/volumes/tandoor_staticfiles/_data",
                "Name": "tandoor_staticfiles",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-29T04:43:34Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "tubesync",
                  "com.docker.compose.version": "2.29.2",
                  "com.docker.compose.volume": "config"
                },
                "Mountpoint": "/var/lib/docker/volumes/tubesync_config/_data",
                "Name": "tubesync_config",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-03-04T02:29:53Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/24bc3c2db44a398346dc5140ce672922d01fd8301d9d5f96bb7aa42e123cbdc2/_data",
                "Name": "24bc3c2db44a398346dc5140ce672922d01fd8301d9d5f96bb7aa42e123cbdc2",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-05-11T19:52:17Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/3febb7a5775a35cc92217b4cdff653388fd6b7e7d0e6f99f0ba79c98970331a2/_data",
                "Name": "3febb7a5775a35cc92217b4cdff653388fd6b7e7d0e6f99f0ba79c98970331a2",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2025-03-11T11:17:47Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/fbcf71d2ca6edaacea3040b8020f925781db8fb12539a6be1e311a7ad58ad2a2/_data",
                "Name": "fbcf71d2ca6edaacea3040b8020f925781db8fb12539a6be1e311a7ad58ad2a2",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2024-09-04T04:20:48Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "mealie",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "mealie-data"
                },
                "Mountpoint": "/var/lib/docker/volumes/mealie_mealie-data/_data",
                "Name": "mealie_mealie-data",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-29T02:41:58Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "nginx-letsencrypt",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "dhparam"
                },
                "Mountpoint": "/var/lib/docker/volumes/nginx-letsencrypt_dhparam/_data",
                "Name": "nginx-letsencrypt_dhparam",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2025-03-11T17:29:34Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/047ffb0d1cef83da0c06724efb49925894b9095a26bb94f1e85957f8847587c2/_data",
                "Name": "047ffb0d1cef83da0c06724efb49925894b9095a26bb94f1e85957f8847587c2",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-08T04:08:30Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/certs/_data",
                "Name": "certs",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2025-06-18T19:12:47Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.volume.anonymous": ""
                },
                "Mountpoint": "/var/lib/docker/volumes/f3b45a6727fecdbfb822f78d805bc13a985e31bca23ba1677fec5d39274e18b5/_data",
                "Name": "f3b45a6727fecdbfb822f78d805bc13a985e31bca23ba1677fec5d39274e18b5",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-08T04:08:30Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/html/_data",
                "Name": "html",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-02-06T04:53:53Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/16a97a2b94fd79bec5b65a9fb0820d0f443a279527dc175e3576a6b81e25fa20/_data",
                "Name": "16a97a2b94fd79bec5b65a9fb0820d0f443a279527dc175e3576a6b81e25fa20",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2021-05-15T17:36:50Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/79cfa5075e3ea69ea40e1247a24a85473069526e21f0d5f6293169b7521f2003/_data",
                "Name": "79cfa5075e3ea69ea40e1247a24a85473069526e21f0d5f6293169b7521f2003",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-09-16T14:32:23Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/dbc9730e13a0f693810592d8b840ad78b4e61e7a8cd9d113972efd4a81aa4a5e/_data",
                "Name": "dbc9730e13a0f693810592d8b840ad78b4e61e7a8cd9d113972efd4a81aa4a5e",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-29T02:41:58Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "nginx-letsencrypt",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "html"
                },
                "Mountpoint": "/var/lib/docker/volumes/nginx-letsencrypt_html/_data",
                "Name": "nginx-letsencrypt_html",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-24T18:15:52Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "tandoor",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "certs"
                },
                "Mountpoint": "/var/lib/docker/volumes/tandoor_certs/_data",
                "Name": "tandoor_certs",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2022-03-03T14:28:44Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/9b7b9a8d2b82a3b4134e832c29509b3ab132b60684ab82bd212a66baa6d43e06/_data",
                "Name": "9b7b9a8d2b82a3b4134e832c29509b3ab132b60684ab82bd212a66baa6d43e06",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-11T15:08:49Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/e0b609f613b9c0ef7cd3710d2768d635dcd2fcc36734cce1ff1ed8de7b532f59/_data",
                "Name": "e0b609f613b9c0ef7cd3710d2768d635dcd2fcc36734cce1ff1ed8de7b532f59",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-29T02:41:58Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "nginx-letsencrypt",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "acme"
                },
                "Mountpoint": "/var/lib/docker/volumes/nginx-letsencrypt_acme/_data",
                "Name": "nginx-letsencrypt_acme",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-07-07T22:52:31Z",
                "Driver": "local",
                "Labels": {
                  "com.docker.compose.project": "tandoor",
                  "com.docker.compose.version": "1.29.2",
                  "com.docker.compose.volume": "nginx_config"
                },
                "Mountpoint": "/var/lib/docker/volumes/tandoor_nginx_config/_data",
                "Name": "tandoor_nginx_config",
                "Options": null,
                "Scope": "local"
              },
              {
                "CreatedAt": "2023-08-08T04:08:30Z",
                "Driver": "local",
                "Labels": null,
                "Mountpoint": "/var/lib/docker/volumes/vhost/_data",
                "Name": "vhost",
                "Options": null,
                "Scope": "local"
              }
            ],
            "Warnings": null
          },
          "Networks": [
            {
              "Name": "ddclient_default",
              "Id": "207d6417e0b92c08deed2a56f6fc00c76675765518ec7082a4158d537fffe053",
              "Created": "2022-01-30T02:41:14.450958984Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.24.0.0/16",
                    "Gateway": "172.24.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "ddclient",
                "com.docker.compose.version": "1.25.0"
              }
            },
            {
              "Name": "tautulli_default",
              "Id": "5dfc6a59e41b55bd2eb12792dbe6d2a9258cda2432ebf0667d807736513d40a0",
              "Created": "2024-09-20T01:10:53.252731217Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.30.0.0/16",
                    "Gateway": "172.30.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "tautulli",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "monero_default",
              "Id": "717f17d6617b762bed3272268ba6b0ea78c87513099451923dcc177afaf1f1b0",
              "Created": "2022-08-16T02:37:28.056680896Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.22.0.0/16",
                    "Gateway": "172.22.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "monero",
                "com.docker.compose.version": "1.25.0"
              }
            },
            {
              "Name": "nginx-proxy",
              "Id": "b4cac544f2eec77bbf52afe9cb4ad5031882e1f39a6d2ff23959cdb4cd338fed",
              "Created": "2023-08-24T18:15:48.936901524Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": {},
                "Config": [
                  {
                    "Subnet": "172.26.0.0/16",
                    "Gateway": "172.26.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {}
            },
            {
              "Name": "mealie_default",
              "Id": "ea6d872a06be289c3c9171ee08ab4153aef7e05d88166cd2f0dc2cd25d1781fd",
              "Created": "2024-12-11T19:24:51.74571352Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.25.0.0/16",
                    "Gateway": "172.25.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "mealie",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "host",
              "Id": "f493e41d374499316181b7c798e54489db9915ee5669ac4f83449cb8bf07bc97",
              "Created": "2021-03-14T03:20:25.506247799Z",
              "Scope": "local",
              "Driver": "host",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": null
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {}
            },
            {
              "Name": "jorts_default",
              "Id": "3d880fdd8b9d5f01b8b1bee051e119f200f33877e4265eb5d1632f04689cf2a6",
              "Created": "2025-06-18T19:12:14.874622526Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.23.0.0/16",
                    "Gateway": "172.23.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "jorts",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "none",
              "Id": "3dc8015597a043fbdc1d3b012bf9475907750f9bde737af42dd5771e4afab58b",
              "Created": "2021-03-14T03:20:25.416226461Z",
              "Scope": "local",
              "Driver": "null",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": null
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {}
            },
            {
              "Name": "co-voter-db_default",
              "Id": "a15e6b029402ad49603d32930adfc1dc4d73f0da84c1ae1fc2140f7a45e3b6ec",
              "Created": "2021-05-15T17:36:17.471530525Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.18.0.0/16",
                    "Gateway": "172.18.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "co-voter-db",
                "com.docker.compose.version": "1.25.0"
              }
            },
            {
              "Name": "portainer-agent_default",
              "Id": "c49660d488a15b89fc1360d727d78888b568eb8911070f5096bfdc3c1f442a58",
              "Created": "2024-09-27T19:50:51.774142613Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.31.0.0/16",
                    "Gateway": "172.31.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "portainer-agent",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "nodered_default",
              "Id": "f2383f71c5f560ccc56767dc848cb60b966f33042e8cb2edb0f4d4c12d6c49c2",
              "Created": "2021-07-27T03:25:47.308061544Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.20.0.0/16",
                    "Gateway": "172.20.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "nodered",
                "com.docker.compose.version": "1.25.0"
              }
            },
            {
              "Name": "swag_default",
              "Id": "82d8928852094089aed7141fdd1612b1c7a54842cfaef9c402ecf94d4868eb98",
              "Created": "2024-09-04T05:07:30.65743639Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "192.168.80.0/20",
                    "Gateway": "192.168.80.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "swag",
                "com.docker.compose.version": "1.29.2"
              }
            },
            {
              "Name": "n8nio_default",
              "Id": "e615f6d6fc85eebe300ed56bfe9ed6885c39eff435b4258652ac568092a37ee4",
              "Created": "2021-06-06T03:33:56.976640473Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.21.0.0/16",
                    "Gateway": "172.21.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": true,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "n8nio",
                "com.docker.compose.version": "1.25.0"
              }
            },
            {
              "Name": "tubesync_default",
              "Id": "f620d8e6f3953c0c725b47730405b03498c5592a7f20836a6b6aa00119c63887",
              "Created": "2024-09-29T04:43:34.022592269Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.19.0.0/16",
                    "Gateway": "172.19.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {},
              "Labels": {
                "com.docker.compose.network": "default",
                "com.docker.compose.project": "tubesync",
                "com.docker.compose.version": "2.29.2"
              }
            },
            {
              "Name": "bridge",
              "Id": "8082ababc140befcab766299c6c1b6b0afb05d9317676d7163ac69f32499b4e6",
              "Created": "2025-08-18T15:18:28.852912912Z",
              "Scope": "local",
              "Driver": "bridge",
              "EnableIPv6": false,
              "IPAM": {
                "Driver": "default",
                "Options": null,
                "Config": [
                  {
                    "Subnet": "172.17.0.0/16",
                    "Gateway": "172.17.0.1"
                  }
                ]
              },
              "Internal": false,
              "Attachable": false,
              "Ingress": false,
              "ConfigFrom": {
                "Network": ""
              },
              "ConfigOnly": false,
              "Containers": {},
              "Options": {
                "com.docker.network.bridge.default_bridge": "true",
                "com.docker.network.bridge.enable_icc": "true",
                "com.docker.network.bridge.enable_ip_masquerade": "true",
                "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
                "com.docker.network.bridge.name": "docker0",
                "com.docker.network.driver.mtu": "1500"
              },
              "Labels": {}
            }
          ],
          "Images": [
            {
              "Containers": 1,
              "Created": 1750229886,
              "Id": "sha256:18ace5c5dd53928c3f91d1d58a78dc7756eeea9920d40bd10c80bd7624bf4aa1",
              "Labels": {
                "build_version": "Linuxserver.io version:- v0.22.2026-ls63 Build-date:- 2025-06-18T06:56:33+00:00",
                "maintainer": "thelamer",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-06-18T06:56:33+00:00",
                "org.opencontainers.image.description": "[Jackett](https://github.com/Jackett/Jackett) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping \u0026 translation logic - removing the burden from other apps.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-jackett",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "9d97c21338edbeaafc76afea4dc6b1ba0544e0bd",
                "org.opencontainers.image.revision": "9d97c21338edbeaafc76afea4dc6b1ba0544e0bd",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-jackett",
                "org.opencontainers.image.title": "Jackett",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-jackett/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "v0.22.2026-ls63"
              },
              "ParentId": "",
              "RepoDigests": [
                "linuxserver/jackett@sha256:932ba7fdeb37b5e00d2cd607ae48ab3647f2b0492402b5f7c136e1294709a888"
              ],
              "RepoTags": [
                "linuxserver/jackett:latest"
              ],
              "SharedSize": -1,
              "Size": 178729234
            },
            {
              "Containers": 1,
              "Created": 1749963263,
              "Id": "sha256:3529d5ea7df4a76352258ed45269525bfb9fe338cfb74c678e9f8d57dd312407",
              "Labels": {
                "build_version": "Linuxserver.io version:- 5.26.2.10099-ls276 Build-date:- 2025-06-15T04:52:48+00:00",
                "maintainer": "Roxedus,thespad",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-06-15T04:52:48+00:00",
                "org.opencontainers.image.description": "[Radarr](https://github.com/Radarr/Radarr) - A fork of Sonarr to work with movies à la Couchpotato.  ",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-radarr",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                "org.opencontainers.image.revision": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-radarr",
                "org.opencontainers.image.title": "Radarr",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-radarr/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "5.26.2.10099-ls276"
              },
              "ParentId": "",
              "RepoDigests": [
                "linuxserver/radarr@sha256:07a474b61394553e047ad43a1a78c1047fc99be0144c509dd91e3877f402ebcb"
              ],
              "RepoTags": [
                "linuxserver/radarr:latest"
              ],
              "SharedSize": -1,
              "Size": 206979984
            },
            {
              "Containers": 1,
              "Created": 1749857977,
              "Id": "sha256:83d012526cd89eef0be5e4511384cda624e231102e0a7fdc8434bcfe88d67fe3",
              "Labels": {
                "build_version": "Linuxserver.io version:- 4.0.14.2939-ls284 Build-date:- 2025-06-13T23:37:58+00:00",
                "maintainer": "thespad",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2025-06-13T23:37:58+00:00",
                "org.opencontainers.image.description": "[Sonarr](https://sonarr.tv/) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.  ",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-sonarr",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "b56ca9c99d836e19529fbba29d31dd65f43eb30d",
                "org.opencontainers.image.revision": "b56ca9c99d836e19529fbba29d31dd65f43eb30d",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-sonarr",
                "org.opencontainers.image.title": "Sonarr",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-sonarr/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "4.0.14.2939-ls284"
              },
              "ParentId": "",
              "RepoDigests": [
                "linuxserver/sonarr@sha256:de67e5b682fedcc4ac34f28a5697931c680c959ea65f8111b0cce17bc698c0b2"
              ],
              "RepoTags": [
                "linuxserver/sonarr:latest"
              ],
              "SharedSize": -1,
              "Size": 205432752
            },
            {
              "Containers": 1,
              "Created": 1748456691,
              "Id": "sha256:a78d053fdb3844260d5acfd681223b4b86bc9db75fc7a5ef77416f894fb0ce48",
              "Labels": {
                "autoheal": "true",
                "org.opencontainers.image.created": "2025-05-28T18:23:31.817Z",
                "org.opencontainers.image.description": "Docker container running Transmission torrent client with WebUI over an OpenVPN tunnel",
                "org.opencontainers.image.licenses": "GPL-3.0",
                "org.opencontainers.image.ref.name": "ubuntu",
                "org.opencontainers.image.revision": "fd609f2ace1970858d3c32fcbd6c271b3d274d39",
                "org.opencontainers.image.source": "https://github.com/haugene/docker-transmission-openvpn",
                "org.opencontainers.image.title": "docker-transmission-openvpn",
                "org.opencontainers.image.url": "https://github.com/haugene/docker-transmission-openvpn",
                "org.opencontainers.image.version": "5.3.2"
              },
              "ParentId": "",
              "RepoDigests": [
                "haugene/transmission-openvpn@sha256:ecc30da79114d801295fd10a5dbaf8640b19707d012fb55be0671ddbe0503037"
              ],
              "RepoTags": [
                "haugene/transmission-openvpn:latest"
              ],
              "SharedSize": -1,
              "Size": 367731522
            },
            {
              "Containers": 1,
              "Created": 1732699738,
              "Id": "sha256:48e4bc66d858856d289ac34bb303f8639d91b97e952549a878302cdab878e52a",
              "Labels": {
                "org.opencontainers.image.source": "https://github.com/mealie-recipes/mealie"
              },
              "ParentId": "",
              "RepoDigests": [
                "ghcr.io/mealie-recipes/mealie@sha256:562ba8b1c98fbfa98a019ab6e0e45c88dae9a2e9a858ec4eac8f6321e46e9227"
              ],
              "RepoTags": [
                "ghcr.io/mealie-recipes/mealie:latest"
              ],
              "SharedSize": -1,
              "Size": 437015964
            },
            {
              "Containers": 1,
              "Created": 1727125831,
              "Id": "sha256:b93bc8e296db52fe3f5940c6bd1638b58003edf480b7a1444cbc3290560b7079",
              "Labels": {
                "io.portainer.agent": "true"
              },
              "ParentId": "",
              "RepoDigests": [
                "portainer/agent@sha256:bf5d95953fe862e117e2093a2a7fff684e3db3a7a4313710ce2dde23e095f18d"
              ],
              "RepoTags": [
                "portainer/agent:2.21.2"
              ],
              "SharedSize": -1,
              "Size": 214975136
            },
            {
              "Containers": 1,
              "Created": 1725310811,
              "Id": "sha256:0daaaa2d6f545cf763a27760486243ae46b3eb312ee93b469d0b6b82c5cc81ea",
              "Labels": {
                "build_version": "Linuxserver.io version:- 2.11.0-ls322 Build-date:- 2024-09-02T20:57:08+00:00",
                "maintainer": "nemchik",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2024-09-02T20:57:08+00:00",
                "org.opencontainers.image.description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-swag",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "5027f6f7b302e0e8e53353940211a23aac62f116",
                "org.opencontainers.image.revision": "5027f6f7b302e0e8e53353940211a23aac62f116",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-swag",
                "org.opencontainers.image.title": "Swag",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-swag/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "2.11.0-ls322"
              },
              "ParentId": "",
              "RepoDigests": [
                "ghcr.io/linuxserver/swag@sha256:6ed737b53ba6a554973292413a85f0ada74ce28c396ae8b6d4d38316cac312ef"
              ],
              "RepoTags": [
                "ghcr.io/linuxserver/swag:latest"
              ],
              "SharedSize": -1,
              "Size": 391316990
            },
            {
              "Containers": 1,
              "Created": 1724482283,
              "Id": "sha256:959f120d9509881d9c0b642a0ad16569838e157d4edc16c49063a8028723079a",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "ghcr.io/meeb/tubesync@sha256:c723de8de28c4e68a06575b388623ce322cdf93e4d1a40a3ec2b3788e30c4815"
              ],
              "RepoTags": [
                "ghcr.io/meeb/tubesync:latest"
              ],
              "SharedSize": -1,
              "Size": 611498035
            },
            {
              "Containers": 0,
              "Created": 1724238839,
              "Id": "sha256:83b90539d35895fa6813ea21de8cc6e757f74719e5595c3c01c01a1dbe14c695",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "ghcr.io/mealie-recipes/mealie@sha256:88e8e12542e9a2733c07f175682dc69e7360becb6137d604bb087a71ab33c5fe"
              ],
              "RepoTags": [
                "ghcr.io/mealie-recipes/mealie:v1.12.0"
              ],
              "SharedSize": -1,
              "Size": 448585432
            },
            {
              "Containers": 1,
              "Created": 1723344367,
              "Id": "sha256:51502185381b1904d42216216bb04ed49eb19ecb1f8a894ee4d80d1d3ca24ca5",
              "Labels": {
                "maintainer": "Tautulli"
              },
              "ParentId": "",
              "RepoDigests": [
                "tautulli/tautulli@sha256:027a269f954d6a455b8df3fd76cc7b7a163d39a9eba5059a01d11727bd3b9dd6"
              ],
              "RepoTags": [
                "tautulli/tautulli:latest"
              ],
              "SharedSize": -1,
              "Size": 211859211
            },
            {
              "Containers": 0,
              "Created": 1723137628,
              "Id": "sha256:15a7c2c4d15980572fc5851aecc1841b36f953da8fb17e486426d4cbe1a6194c",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "postgres@sha256:492898505cb45f9835acc327e98711eaa9298ed804e0bb36f29e08394229550d"
              ],
              "RepoTags": [
                "postgres:16-alpine"
              ],
              "SharedSize": -1,
              "Size": 244952329
            },
            {
              "Containers": 1,
              "Created": 1714994335,
              "Id": "sha256:c2ef7ac2d40dd8818a38bf601b4cb54a1b21bc00dabe9e1aa4a239fcc59c3c7e",
              "Labels": {
                "org.opencontainers.image.authors": "quentin.mcgaw@gmail.com",
                "org.opencontainers.image.created": "2024-05-06T11:16:06.246Z",
                "org.opencontainers.image.description": "Container to update DNS records periodically with WebUI for many DNS providers",
                "org.opencontainers.image.documentation": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.licenses": "MIT",
                "org.opencontainers.image.revision": "542e89536c524cdb2215a48384af7ef6fad2c443",
                "org.opencontainers.image.source": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.title": "ddns-updater",
                "org.opencontainers.image.url": "https://github.com/qdm12/ddns-updater",
                "org.opencontainers.image.version": "latest"
              },
              "ParentId": "",
              "RepoDigests": [
                "qmcgaw/ddns-updater@sha256:e4609e9e5d4a30a19f80384037022c1c57c39767946f007679457be262eadc25"
              ],
              "RepoTags": [
                "qmcgaw/ddns-updater:latest"
              ],
              "SharedSize": -1,
              "Size": 16982168
            },
            {
              "Containers": 0,
              "Created": 1699559475,
              "Id": "sha256:2b35f9941b94ba38a4a808044a92db6a06b308bab173167ff12f93ba78b01595",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "postgres@sha256:793bbc22cf8dfc7962c006e8e326d19e60ad756d1185ed875e25d4494b16dd66"
              ],
              "RepoTags": [
                "postgres:15-alpine"
              ],
              "SharedSize": -1,
              "Size": 242465524
            },
            {
              "Containers": 0,
              "Created": 1698196946,
              "Id": "sha256:b135667c98980d3ca424a228cc4d2afdb287dc4e1a6a813a34b2e1705517488e",
              "Labels": {
                "maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
              },
              "ParentId": "",
              "RepoDigests": [
                "nginx@sha256:db353d0f0c479c91bd15e01fc68ed0f33d9c4c52f3415e63332c3d0bf7a4bb77"
              ],
              "RepoTags": [
                "nginx:mainline-alpine"
              ],
              "SharedSize": -1,
              "Size": 47692233
            },
            {
              "Containers": 0,
              "Created": 1693307596,
              "Id": "sha256:9db83127a4fcbad178062e18dc8def5c2834842e164ea5866e60dfd4e7fe4c05",
              "Labels": {
                "org.opencontainers.image.created": "2023-08-29T11:12:48.168Z",
                "org.opencontainers.image.description": "Application for managing recipes, planning meals, building shopping lists and much much more!",
                "org.opencontainers.image.licenses": "NOASSERTION",
                "org.opencontainers.image.revision": "d42d784aeb0595bbc0ed47eb8bbc27ba61b0787d",
                "org.opencontainers.image.source": "https://github.com/TandoorRecipes/recipes",
                "org.opencontainers.image.title": "recipes",
                "org.opencontainers.image.url": "https://github.com/TandoorRecipes/recipes",
                "org.opencontainers.image.version": "1.5.6"
              },
              "ParentId": "",
              "RepoDigests": [
                "vabene1111/recipes@sha256:5c9a304e42aac1f02ac1387f7183473eeeabc091635524587d158f78c8426f68"
              ],
              "RepoTags": [
                "vabene1111/recipes:latest"
              ],
              "SharedSize": -1,
              "Size": 360222566
            },
            {
              "Containers": 1,
              "Created": 1692142777,
              "Id": "sha256:eaf194063ee287f60137b88326ed4d3a14ec62f20de06df6ff7f8b5ed9f1d08c",
              "Labels": {
                "maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
              },
              "ParentId": "",
              "RepoDigests": [
                "nginx@sha256:cac882be2b7305e0c8d3e3cd0575a2fd58f5fde6dd5d6299605aa0f3e67ca385"
              ],
              "RepoTags": [
                "nginx:alpine"
              ],
              "SharedSize": -1,
              "Size": 42558240
            },
            {
              "Containers": 0,
              "Created": 1691517417,
              "Id": "sha256:b03c9c6b514df6c4059a495623d15b196cd946ab842f62224531d066b60cea74",
              "Labels": {
                "org.opencontainers.image.authors": "Nicolas Duchon \u003cnicolas.duchon@gmail.com\u003e (@buchdag), Yves Blusseau",
                "org.opencontainers.image.created": "2023-08-21T00:06:40.505Z",
                "org.opencontainers.image.description": "Automated ACME SSL certificate generation for nginx-proxy",
                "org.opencontainers.image.licenses": "MIT",
                "org.opencontainers.image.revision": "9fbd6684efba2d740f195f12888362307d26bb59",
                "org.opencontainers.image.source": "https://github.com/nginx-proxy/acme-companion",
                "org.opencontainers.image.title": "acme-companion",
                "org.opencontainers.image.url": "https://github.com/nginx-proxy/acme-companion",
                "org.opencontainers.image.version": "v2.2.8-14-g9fbd668"
              },
              "ParentId": "",
              "RepoDigests": [
                "nginxproxy/acme-companion@sha256:088653e49e74f317fd9e3c63478ee1a380d954e81490beb8c8d77e7f68f16fe5"
              ],
              "RepoTags": [
                "nginxproxy/acme-companion:latest"
              ],
              "SharedSize": -1,
              "Size": 30491659
            },
            {
              "Containers": 0,
              "Created": 1691366587,
              "Id": "sha256:f9d1283c3cb150d0c8da7e119f10f46aa7fe68f23ff9506f9c28dc9b81a11854",
              "Labels": {
                "maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e",
                "org.opencontainers.image.authors": "Nicolas Duchon \u003cnicolas.duchon@gmail.com\u003e (@buchdag), Jason Wilder",
                "org.opencontainers.image.created": "2023-08-07T00:02:29.615Z",
                "org.opencontainers.image.description": "Automated nginx proxy for Docker containers using docker-gen",
                "org.opencontainers.image.licenses": "MIT",
                "org.opencontainers.image.revision": "6f0be586b93f88b7d7a1486f0a57e6ea4b3d4cf9",
                "org.opencontainers.image.source": "https://github.com/nginx-proxy/nginx-proxy",
                "org.opencontainers.image.title": "nginx-proxy",
                "org.opencontainers.image.url": "https://github.com/nginx-proxy/nginx-proxy",
                "org.opencontainers.image.version": "1.3.1-36-g6f0be58"
              },
              "ParentId": "",
              "RepoDigests": [
                "nginxproxy/nginx-proxy@sha256:808ff636f5797e53aae703a117501c32cfe4d274ea0becd42979a0efb5d52ff8"
              ],
              "RepoTags": [
                "nginxproxy/nginx-proxy:latest"
              ],
              "SharedSize": -1,
              "Size": 203227670
            },
            {
              "Containers": 1,
              "Created": 1660617359,
              "Id": "sha256:4566e71789eb5c35b5c6bf03860824829811b748914489269de9c4a83be26d9f",
              "Labels": null,
              "ParentId": "sha256:ace1e81ff7d23726b0b6783ab3ac4ba468480621c680d8f74365501eb3bb2102",
              "RepoDigests": [],
              "RepoTags": [
                "monero-0.18.1.0:latest"
              ],
              "SharedSize": -1,
              "Size": 86682099
            },
            {
              "Containers": 0,
              "Created": 1660617357,
              "Id": "sha256:24742db24a6be1c5a8480708e410b18a74225d66ac3d9a251c7e681f8fbf5789",
              "Labels": null,
              "ParentId": "sha256:9ac1f2c16931fe5fffb9bda0f885b9c9beecc0c716c3d24a83604497ac8ca2d1",
              "RepoDigests": [],
              "RepoTags": [],
              "SharedSize": -1,
              "Size": 142387587
            },
            {
              "Containers": 0,
              "Created": 1659403842,
              "Id": "sha256:8d5df41c547bd107c14368ad302efc46760940ae188df451cabc23e10f7f161b",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "ubuntu@sha256:eb1392bbdde63147bc2b4ff1a4053dcfe6d15e4dfd3cce29e9b9f52a4f88bc74"
              ],
              "RepoTags": [
                "ubuntu:18.04"
              ],
              "SharedSize": -1,
              "Size": 63148618
            },
            {
              "Containers": 1,
              "Created": 1643081423,
              "Id": "sha256:c06f6677e83d3bf7992ca3b73a4a4323707dd18dd3f49fc738f3037f2b214502",
              "Labels": {
                "build_version": "Linuxserver.io version:- v3.9.1-ls77 Build-date:- 2022-01-25T04:27:56+01:00",
                "maintainer": "saarg",
                "org.opencontainers.image.authors": "linuxserver.io",
                "org.opencontainers.image.created": "2022-01-25T04:27:56+01:00",
                "org.opencontainers.image.description": "[Ddclient](https://github.com/ddclient/ddclient) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
                "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-ddclient",
                "org.opencontainers.image.licenses": "GPL-3.0-only",
                "org.opencontainers.image.ref.name": "84fdece6a272df5dc8baa96b7d08d9091611ddd6",
                "org.opencontainers.image.revision": "84fdece6a272df5dc8baa96b7d08d9091611ddd6",
                "org.opencontainers.image.source": "https://github.com/linuxserver/docker-ddclient",
                "org.opencontainers.image.title": "Ddclient",
                "org.opencontainers.image.url": "https://github.com/linuxserver/docker-ddclient/packages",
                "org.opencontainers.image.vendor": "linuxserver.io",
                "org.opencontainers.image.version": "v3.9.1-ls77"
              },
              "ParentId": "",
              "RepoDigests": [
                "lscr.io/linuxserver/ddclient@sha256:9e7751451b9968817280120114a483fbf63ae61a617efea1c76e5ca25d4cfa7a"
              ],
              "RepoTags": [
                "lscr.io/linuxserver/ddclient:latest"
              ],
              "SharedSize": -1,
              "Size": 73915619
            },
            {
              "Containers": 1,
              "Created": 1630010512,
              "Id": "sha256:de86e77bf2d55ad2506d647891bcf2ec266bb2f87ef1dadbea6c4c11fb3ae364",
              "Labels": {
                "maintainer": "Shaun.Garwood@gmail.com"
              },
              "ParentId": "sha256:3fd5b9b0870858bb747258b41c00e8777c49d4cfec81acc71745b163b1cdc580",
              "RepoDigests": [],
              "RepoTags": [
                "co-voter-db_api:latest"
              ],
              "SharedSize": -1,
              "Size": 1854205991
            },
            {
              "Containers": 0,
              "Created": 1628804139,
              "Id": "sha256:9231c59cd582c09c5ef11d97ac48f5754c6f5189e4f0ade5d8b9edefdcc5f2cf",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "python@sha256:cb74758aca3c66b1213e5d84fb943f425c7d44a07ba4949e4cf5c690cd855cae"
              ],
              "RepoTags": [
                "python:3.7-alpine"
              ],
              "SharedSize": -1,
              "Size": 41926391
            },
            {
              "Containers": 1,
              "Created": 1627047889,
              "Id": "sha256:04fa5935c931bca42e200c9c72142272d829cfe7b8c90c05746c61e7d99a5679",
              "Labels": {
                "authors": "Dave Conway-Jones, Nick O'Leary, James Thomas, Raymond Mouthaan",
                "org.label-schema.arch": "",
                "org.label-schema.build-date": "2021-07-23T13:43:59Z",
                "org.label-schema.description": "Low-code programming for event-driven applications.",
                "org.label-schema.docker.dockerfile": ".docker/Dockerfile.alpine",
                "org.label-schema.license": "Apache-2.0",
                "org.label-schema.name": "Node-RED",
                "org.label-schema.url": "https://nodered.org",
                "org.label-schema.vcs-ref": "",
                "org.label-schema.vcs-type": "Git",
                "org.label-schema.vcs-url": "https://github.com/node-red/node-red-docker",
                "org.label-schema.version": "2.0.3"
              },
              "ParentId": "",
              "RepoDigests": [
                "nodered/node-red@sha256:4607088c00fc8272b39641d21568659029b5ab5f401cfffb596048cd0187f6b9"
              ],
              "RepoTags": [
                "nodered/node-red:latest"
              ],
              "SharedSize": -1,
              "Size": 510371319
            },
            {
              "Containers": 1,
              "Created": 1622764339,
              "Id": "sha256:20b15d294804436bba0b6c4a6b4d00dd01bf01ed53c615541ce2090de6f6a70a",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "n8nio/n8n@sha256:de2dac26370c86c05ed8607c4083bf3e8872dec89fd6a3dc574079e99c3bb420"
              ],
              "RepoTags": [
                "n8nio/n8n:latest"
              ],
              "SharedSize": -1,
              "Size": 417573708
            },
            {
              "Containers": 1,
              "Created": 1620691910,
              "Id": "sha256:07630e791de3ceb87d39543799438e118753246d19dcfd6529bd4d27ff1b83bd",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "mongo@sha256:401ae88210c708d54873af22df618b46a5f3d2da1c2676d115326b205ec78d3f"
              ],
              "RepoTags": [
                "mongo:latest"
              ],
              "SharedSize": -1,
              "Size": 448875431
            },
            {
              "Containers": 0,
              "Created": 1619435002,
              "Id": "sha256:4456dbe3d1d6071d8a30b91dec0d45f88e5d3ab93e7aafafa863d5d0e58291ac",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "kannix/monero-full-node@sha256:24071a723ae6a748ddbe892dfb8f6029f51aec381b760284ea71ccc16030a18e"
              ],
              "RepoTags": [
                "kannix/monero-full-node:latest"
              ],
              "SharedSize": -1,
              "Size": 89271239
            },
            {
              "Containers": 1,
              "Created": 1614986725,
              "Id": "sha256:d1165f2212346b2bab48cb01c1e39ee8ad1be46b87873d9ca7a4e434980a7726",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "hello-world@sha256:308866a43596e83578c7dfa15e27a73011bdd402185a84c5cd7f32a88b501a24"
              ],
              "RepoTags": [
                "hello-world:latest"
              ],
              "SharedSize": -1,
              "Size": 13336
            },
            {
              "Containers": 0,
              "Created": 1613802819,
              "Id": "sha256:894ca980a772b47f0e6cbcbcea81bf3f7b8d3817b00a86f9c528b42bb61b3641",
              "Labels": null,
              "ParentId": "",
              "RepoDigests": [
                "huginn/huginn@sha256:441716047d882e0f3255b075ef74af1bf32ff992778ba419bc16325606a5af69"
              ],
              "RepoTags": [
                "huginn/huginn:latest"
              ],
              "SharedSize": -1,
              "Size": 1176523389
            }
          ],
          "Info": {
            "ID": "0fcdeb6f-085f-4b25-828f-5a582bdc63e2",
            "Containers": 18,
            "ContainersRunning": 11,
            "ContainersPaused": 0,
            "ContainersStopped": 7,
            "Images": 46,
            "Driver": "overlay2",
            "DriverStatus": [
              [
                "Backing Filesystem",
                "extfs"
              ],
              [
                "Supports d_type",
                "true"
              ],
              [
                "Using metacopy",
                "false"
              ],
              [
                "Native Overlay Diff",
                "true"
              ],
              [
                "userxattr",
                "false"
              ]
            ],
            "Plugins": {
              "Volume": [
                "local"
              ],
              "Network": [
                "bridge",
                "host",
                "ipvlan",
                "macvlan",
                "null",
                "overlay"
              ],
              "Authorization": null,
              "Log": [
                "awslogs",
                "fluentd",
                "gcplogs",
                "gelf",
                "journald",
                "json-file",
                "local",
                "splunk",
                "syslog"
              ]
            },
            "MemoryLimit": true,
            "SwapLimit": true,
            "CpuCfsPeriod": true,
            "CpuCfsQuota": true,
            "CPUShares": true,
            "CPUSet": true,
            "PidsLimit": true,
            "IPv4Forwarding": true,
            "BridgeNfIptables": false,
            "BridgeNfIp6tables": false,
            "Debug": false,
            "NFd": 138,
            "OomKillDisable": false,
            "NGoroutines": 139,
            "SystemTime": "2025-09-06T02:54:09.944669741Z",
            "LoggingDriver": "json-file",
            "CgroupDriver": "systemd",
            "CgroupVersion": "2",
            "NEventsListener": 0,
            "KernelVersion": "5.15.0-151-generic",
            "OperatingSystem": "Ubuntu 22.04.5 LTS",
            "OSVersion": "22.04",
            "OSType": "linux",
            "Architecture": "x86_64",
            "IndexServerAddress": "https://index.docker.io/v1/",
            "RegistryConfig": {
              "AllowNondistributableArtifactsCIDRs": null,
              "AllowNondistributableArtifactsHostnames": null,
              "InsecureRegistryCIDRs": [
                "::1/128",
                "127.0.0.0/8"
              ],
              "IndexConfigs": {
                "docker.io": {
                  "Name": "docker.io",
                  "Mirrors": [],
                  "Secure": true,
                  "Official": true
                }
              },
              "Mirrors": null
            },
            "NCPU": 28,
            "MemTotal": 33566289920,
            "GenericResources": null,
            "DockerRootDir": "/var/lib/docker",
            "HttpProxy": "",
            "HttpsProxy": "",
            "NoProxy": "",
            "Name": "overkill-1",
            "Labels": [],
            "ExperimentalBuild": false,
            "ServerVersion": "28.3.3",
            "Runtimes": {
              "io.containerd.runc.v2": {
                "path": "runc",
                "status": {
                  "org.opencontainers.runtime-spec.features": "{\"ociVersionMin\":\"1.0.0\",\"ociVersionMax\":\"1.2.0\",\"hooks\":[\"prestart\",\"createRuntime\",\"createContainer\",\"startContainer\",\"poststart\",\"poststop\"],\"mountOptions\":[\"async\",\"atime\",\"bind\",\"defaults\",\"dev\",\"diratime\",\"dirsync\",\"exec\",\"iversion\",\"lazytime\",\"loud\",\"mand\",\"noatime\",\"nodev\",\"nodiratime\",\"noexec\",\"noiversion\",\"nolazytime\",\"nomand\",\"norelatime\",\"nostrictatime\",\"nosuid\",\"nosymfollow\",\"private\",\"ratime\",\"rbind\",\"rdev\",\"rdiratime\",\"relatime\",\"remount\",\"rexec\",\"rnoatime\",\"rnodev\",\"rnodiratime\",\"rnoexec\",\"rnorelatime\",\"rnostrictatime\",\"rnosuid\",\"rnosymfollow\",\"ro\",\"rprivate\",\"rrelatime\",\"rro\",\"rrw\",\"rshared\",\"rslave\",\"rstrictatime\",\"rsuid\",\"rsymfollow\",\"runbindable\",\"rw\",\"shared\",\"silent\",\"slave\",\"strictatime\",\"suid\",\"symfollow\",\"sync\",\"tmpcopyup\",\"unbindable\"],\"linux\":{\"namespaces\":[\"cgroup\",\"ipc\",\"mount\",\"network\",\"pid\",\"time\",\"user\",\"uts\"],\"capabilities\":[\"CAP_CHOWN\",\"CAP_DAC_OVERRIDE\",\"CAP_DAC_READ_SEARCH\",\"CAP_FOWNER\",\"CAP_FSETID\",\"CAP_KILL\",\"CAP_SETGID\",\"CAP_SETUID\",\"CAP_SETPCAP\",\"CAP_LINUX_IMMUTABLE\",\"CAP_NET_BIND_SERVICE\",\"CAP_NET_BROADCAST\",\"CAP_NET_ADMIN\",\"CAP_NET_RAW\",\"CAP_IPC_LOCK\",\"CAP_IPC_OWNER\",\"CAP_SYS_MODULE\",\"CAP_SYS_RAWIO\",\"CAP_SYS_CHROOT\",\"CAP_SYS_PTRACE\",\"CAP_SYS_PACCT\",\"CAP_SYS_ADMIN\",\"CAP_SYS_BOOT\",\"CAP_SYS_NICE\",\"CAP_SYS_RESOURCE\",\"CAP_SYS_TIME\",\"CAP_SYS_TTY_CONFIG\",\"CAP_MKNOD\",\"CAP_LEASE\",\"CAP_AUDIT_WRITE\",\"CAP_AUDIT_CONTROL\",\"CAP_SETFCAP\",\"CAP_MAC_OVERRIDE\",\"CAP_MAC_ADMIN\",\"CAP_SYSLOG\",\"CAP_WAKE_ALARM\",\"CAP_BLOCK_SUSPEND\",\"CAP_AUDIT_READ\",\"CAP_PERFMON\",\"CAP_BPF\",\"CAP_CHECKPOINT_RESTORE\"],\"cgroup\":{\"v1\":true,\"v2\":true,\"systemd\":true,\"systemdUser\":true,\"rdma\":true},\"seccomp\":{\"enabled\":true,\"actions\":[\"SCMP_ACT_ALLOW\",\"SCMP_ACT_ERRNO\",\"SCMP_ACT_KILL\",\"SCMP_ACT_KILL_PROCESS\",\"SCMP_ACT_KILL_THREAD\",\"SCMP_ACT_LOG\",\"SCMP_ACT_NOTIFY\",\"SCMP_ACT_TRACE\",\"SCMP_ACT_TRAP\"],\"operators\":[\"SCMP_CMP_EQ\",\"SCMP_CMP_GE\",\"SCMP_CMP_GT\",\"SCMP_CMP_LE\",\"SCMP_CMP_LT\",\"SCMP_CMP_MASKED_EQ\",\"SCMP_CMP_NE\"],\"archs\":[\"SCMP_ARCH_AARCH64\",\"SCMP_ARCH_ARM\",\"SCMP_ARCH_MIPS\",\"SCMP_ARCH_MIPS64\",\"SCMP_ARCH_MIPS64N32\",\"SCMP_ARCH_MIPSEL\",\"SCMP_ARCH_MIPSEL64\",\"SCMP_ARCH_MIPSEL64N32\",\"SCMP_ARCH_PPC\",\"SCMP_ARCH_PPC64\",\"SCMP_ARCH_PPC64LE\",\"SCMP_ARCH_RISCV64\",\"SCMP_ARCH_S390\",\"SCMP_ARCH_S390X\",\"SCMP_ARCH_X32\",\"SCMP_ARCH_X86\",\"SCMP_ARCH_X86_64\"],\"knownFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"],\"supportedFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"]},\"apparmor\":{\"enabled\":true},\"selinux\":{\"enabled\":true},\"intelRdt\":{\"enabled\":true},\"mountExtensions\":{\"idmap\":{\"enabled\":true}}},\"annotations\":{\"io.github.seccomp.libseccomp.version\":\"2.5.3\",\"org.opencontainers.runc.checkpoint.enabled\":\"true\",\"org.opencontainers.runc.commit\":\"v1.2.5-0-g59923ef\",\"org.opencontainers.runc.version\":\"1.2.5\"},\"potentiallyUnsafeConfigAnnotations\":[\"bundle\",\"org.systemd.property.\",\"org.criu.config\"]}"
                }
              },
              "runc": {
                "path": "runc",
                "status": {
                  "org.opencontainers.runtime-spec.features": "{\"ociVersionMin\":\"1.0.0\",\"ociVersionMax\":\"1.2.0\",\"hooks\":[\"prestart\",\"createRuntime\",\"createContainer\",\"startContainer\",\"poststart\",\"poststop\"],\"mountOptions\":[\"async\",\"atime\",\"bind\",\"defaults\",\"dev\",\"diratime\",\"dirsync\",\"exec\",\"iversion\",\"lazytime\",\"loud\",\"mand\",\"noatime\",\"nodev\",\"nodiratime\",\"noexec\",\"noiversion\",\"nolazytime\",\"nomand\",\"norelatime\",\"nostrictatime\",\"nosuid\",\"nosymfollow\",\"private\",\"ratime\",\"rbind\",\"rdev\",\"rdiratime\",\"relatime\",\"remount\",\"rexec\",\"rnoatime\",\"rnodev\",\"rnodiratime\",\"rnoexec\",\"rnorelatime\",\"rnostrictatime\",\"rnosuid\",\"rnosymfollow\",\"ro\",\"rprivate\",\"rrelatime\",\"rro\",\"rrw\",\"rshared\",\"rslave\",\"rstrictatime\",\"rsuid\",\"rsymfollow\",\"runbindable\",\"rw\",\"shared\",\"silent\",\"slave\",\"strictatime\",\"suid\",\"symfollow\",\"sync\",\"tmpcopyup\",\"unbindable\"],\"linux\":{\"namespaces\":[\"cgroup\",\"ipc\",\"mount\",\"network\",\"pid\",\"time\",\"user\",\"uts\"],\"capabilities\":[\"CAP_CHOWN\",\"CAP_DAC_OVERRIDE\",\"CAP_DAC_READ_SEARCH\",\"CAP_FOWNER\",\"CAP_FSETID\",\"CAP_KILL\",\"CAP_SETGID\",\"CAP_SETUID\",\"CAP_SETPCAP\",\"CAP_LINUX_IMMUTABLE\",\"CAP_NET_BIND_SERVICE\",\"CAP_NET_BROADCAST\",\"CAP_NET_ADMIN\",\"CAP_NET_RAW\",\"CAP_IPC_LOCK\",\"CAP_IPC_OWNER\",\"CAP_SYS_MODULE\",\"CAP_SYS_RAWIO\",\"CAP_SYS_CHROOT\",\"CAP_SYS_PTRACE\",\"CAP_SYS_PACCT\",\"CAP_SYS_ADMIN\",\"CAP_SYS_BOOT\",\"CAP_SYS_NICE\",\"CAP_SYS_RESOURCE\",\"CAP_SYS_TIME\",\"CAP_SYS_TTY_CONFIG\",\"CAP_MKNOD\",\"CAP_LEASE\",\"CAP_AUDIT_WRITE\",\"CAP_AUDIT_CONTROL\",\"CAP_SETFCAP\",\"CAP_MAC_OVERRIDE\",\"CAP_MAC_ADMIN\",\"CAP_SYSLOG\",\"CAP_WAKE_ALARM\",\"CAP_BLOCK_SUSPEND\",\"CAP_AUDIT_READ\",\"CAP_PERFMON\",\"CAP_BPF\",\"CAP_CHECKPOINT_RESTORE\"],\"cgroup\":{\"v1\":true,\"v2\":true,\"systemd\":true,\"systemdUser\":true,\"rdma\":true},\"seccomp\":{\"enabled\":true,\"actions\":[\"SCMP_ACT_ALLOW\",\"SCMP_ACT_ERRNO\",\"SCMP_ACT_KILL\",\"SCMP_ACT_KILL_PROCESS\",\"SCMP_ACT_KILL_THREAD\",\"SCMP_ACT_LOG\",\"SCMP_ACT_NOTIFY\",\"SCMP_ACT_TRACE\",\"SCMP_ACT_TRAP\"],\"operators\":[\"SCMP_CMP_EQ\",\"SCMP_CMP_GE\",\"SCMP_CMP_GT\",\"SCMP_CMP_LE\",\"SCMP_CMP_LT\",\"SCMP_CMP_MASKED_EQ\",\"SCMP_CMP_NE\"],\"archs\":[\"SCMP_ARCH_AARCH64\",\"SCMP_ARCH_ARM\",\"SCMP_ARCH_MIPS\",\"SCMP_ARCH_MIPS64\",\"SCMP_ARCH_MIPS64N32\",\"SCMP_ARCH_MIPSEL\",\"SCMP_ARCH_MIPSEL64\",\"SCMP_ARCH_MIPSEL64N32\",\"SCMP_ARCH_PPC\",\"SCMP_ARCH_PPC64\",\"SCMP_ARCH_PPC64LE\",\"SCMP_ARCH_RISCV64\",\"SCMP_ARCH_S390\",\"SCMP_ARCH_S390X\",\"SCMP_ARCH_X32\",\"SCMP_ARCH_X86\",\"SCMP_ARCH_X86_64\"],\"knownFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"],\"supportedFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"]},\"apparmor\":{\"enabled\":true},\"selinux\":{\"enabled\":true},\"intelRdt\":{\"enabled\":true},\"mountExtensions\":{\"idmap\":{\"enabled\":true}}},\"annotations\":{\"io.github.seccomp.libseccomp.version\":\"2.5.3\",\"org.opencontainers.runc.checkpoint.enabled\":\"true\",\"org.opencontainers.runc.commit\":\"v1.2.5-0-g59923ef\",\"org.opencontainers.runc.version\":\"1.2.5\"},\"potentiallyUnsafeConfigAnnotations\":[\"bundle\",\"org.systemd.property.\",\"org.criu.config\"]}"
                }
              }
            },
            "DefaultRuntime": "runc",
            "Swarm": {
              "NodeID": "",
              "NodeAddr": "",
              "LocalNodeState": "inactive",
              "ControlAvailable": false,
              "Error": "",
              "RemoteManagers": null
            },
            "LiveRestoreEnabled": false,
            "Isolation": "",
            "InitBinary": "docker-init",
            "ContainerdCommit": {
              "ID": "05044ec0a9a75232cad458027ca83437aae3f4da",
              "Expected": ""
            },
            "RuncCommit": {
              "ID": "v1.2.5-0-g59923ef",
              "Expected": ""
            },
            "InitCommit": {
              "ID": "de40ad0",
              "Expected": ""
            },
            "SecurityOptions": [
              "name=apparmor",
              "name=seccomp,profile=builtin",
              "name=cgroupns"
            ],
            "CDISpecDirs": [
              "/etc/cdi",
              "/var/run/cdi"
            ],
            "Warnings": null
          },
          "Version": {
            "Platform": {
              "Name": "Docker Engine - Community"
            },
            "Components": [
              {
                "Name": "Engine",
                "Version": "28.3.3",
                "Details": {
                  "ApiVersion": "1.51",
                  "Arch": "amd64",
                  "BuildTime": "2025-07-25T11:34:04.000000000+00:00",
                  "Experimental": "false",
                  "GitCommit": "bea959c",
                  "GoVersion": "go1.24.5",
                  "KernelVersion": "5.15.0-151-generic",
                  "MinAPIVersion": "1.24",
                  "Os": "linux"
                }
              },
              {
                "Name": "containerd",
                "Version": "1.7.27",
                "Details": {
                  "GitCommit": "05044ec0a9a75232cad458027ca83437aae3f4da"
                }
              },
              {
                "Name": "runc",
                "Version": "1.2.5",
                "Details": {
                  "GitCommit": "v1.2.5-0-g59923ef"
                }
              },
              {
                "Name": "docker-init",
                "Version": "0.19.0",
                "Details": {
                  "GitCommit": "de40ad0"
                }
              }
            ],
            "Version": "28.3.3",
            "ApiVersion": "1.51",
            "MinAPIVersion": "1.24",
            "GitCommit": "bea959c",
            "GoVersion": "go1.24.5",
            "Os": "linux",
            "Arch": "amd64",
            "KernelVersion": "5.15.0-151-generic",
            "BuildTime": "2025-07-25T11:34:04.000000000+00:00"
          }
        },
        "NodeCount": 0,
        "GpuUseAll": false,
        "GpuUseList": []
      },
      "Kubernetes": null
    }
  ],
  "ssl": {
    "certPath": "/data/certs/cert.pem",
    "keyPath": "/data/certs/key.pem",
    "selfSigned": true,
    "httpEnabled": true
  },
  "stacks": [
    {
      "Id": 6,
      "Name": "watchyourlan",
      "Type": 2,
      "EndpointId": 2,
      "SwarmId": "",
      "EntryPoint": "docker-compose.yml",
      "Env": [
        {
          "name": "IFACES",
          "value": "wlx482254ddc065"
        },
        {
          "name": "TZ",
          "value": "America/Denver"
        }
      ],
      "ResourceControl": null,
      "Status": 1,
      "ProjectPath": "/data/compose/6",
      "CreationDate": 1727473422,
      "CreatedBy": "admin",
      "UpdateDate": 0,
      "UpdatedBy": "",
      "AdditionalFiles": null,
      "AutoUpdate": null,
      "Option": null,
      "GitConfig": null,
      "FromAppTemplate": false,
      "Namespace": "",
      "IsComposeFormat": false
    },
    {
      "Id": 8,
      "Name": "tubesync",
      "Type": 2,
      "EndpointId": 3,
      "SwarmId": "",
      "EntryPoint": "docker-compose.yml",
      "Env": [
        {
          "name": "TZ",
          "value": "America/Denver"
        }
      ],
      "ResourceControl": null,
      "Status": 1,
      "ProjectPath": "/data/compose/8",
      "CreationDate": 1727584997,
      "CreatedBy": "admin",
      "UpdateDate": 0,
      "UpdatedBy": "",
      "AdditionalFiles": null,
      "AutoUpdate": null,
      "Option": null,
      "GitConfig": null,
      "FromAppTemplate": false,
      "Namespace": "",
      "IsComposeFormat": false
    },
    {
      "Id": 13,
      "Name": "mealie",
      "Type": 2,
      "EndpointId": 2,
      "SwarmId": "",
      "EntryPoint": "docker-compose.yml",
      "Env": [],
      "ResourceControl": null,
      "Status": 1,
      "ProjectPath": "/data/compose/13",
      "CreationDate": 1729377377,
      "CreatedBy": "admin",
      "UpdateDate": 0,
      "UpdatedBy": "",
      "AdditionalFiles": null,
      "AutoUpdate": null,
      "Option": null,
      "GitConfig": null,
      "FromAppTemplate": false,
      "Namespace": "",
      "IsComposeFormat": false
    }
  ],
  "tunnel_server": {
    "PrivateKeySeed": ""
  },
  "users": [
    {
      "Id": 1,
      "Username": "admin",
      "Password": "$2a$10$UqFSJv2fAN1ivUrAvVfy6e981qo82UttuX4aTYmFfLZO/ZyjV2KXe",
      "Role": 1,
      "TokenIssueAt": 0,
      "ThemeSettings": {
        "color": ""
      },
      "UseCache": false,
      "PortainerAuthorizations": null,
      "EndpointAuthorizations": null
    }
  ],
  "version": {
    "SchemaVersion": "2.21.2",
    "MigratorCount": 0,
    "Edition": 1,
    "InstanceID": "985831a3-d13e-4ce9-a6b5-cd95f5de7f1b"
  },
  "metadata": {
    "api_key": 0,
    "customtemplates": 0,
    "dockerhub": 0,
    "edge_stack": 0,
    "edgegroups": 0,
    "edgejobs": 0,
    "endpoint_groups": 1,
    "endpoint_relations": 0,
    "endpoints": 3,
    "extension": 0,
    "fdo_profiles": 0,
    "helm_user_repository": 0,
    "pending_actions": 0,
    "registries": 0,
    "resource_control": 4,
    "roles": 0,
    "schedules": 0,
    "settings": 0,
    "snapshots": 0,
    "ssl": 0,
    "stacks": 13,
    "tags": 0,
    "team_membership": 0,
    "teams": 0,
    "tunnel_server": 0,
    "users": 1,
    "version": 0,
    "webhooks": 0
  }
}